{"canonical": "restaurant that has outdoor seating and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string credit)))", "natural": "what restaurants take credit cards and have outdoor settings"}
{"canonical": "restaurant that has delivery and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "natural": "restaurant that has delivery and whose cuisine is thai"}
{"canonical": "neighborhood that is neighborhood of restaurant that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit))))", "natural": "what neighborhood has restaurants that accept credit cards"}
{"canonical": "restaurant that serves more than two meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "what restaurants serves more than just one meal"}
{"canonical": "restaurant whose cuisine is cuisine of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string cuisine))))", "natural": "list all restaurants similar to the cuisine of thai cafe"}
{"canonical": "restaurant that has waiter service and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "restaurants in the midtown west neighborhood that have waiters"}
{"canonical": "restaurant that takes reservations and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string reserve)))", "natural": "what restaurant takes resverations"}
{"canonical": "restaurant that serves lunch or dinner", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.food.lunch en.food.dinner)))", "natural": "restaurant that is open for lunch and dinner"}
{"canonical": "neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "natural": "what is the neighborhood of the restaurant that has a price rating of 2 dollar signs"}
{"canonical": "neighborhood that is neighborhood of more than two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what neighborhood has more than two restaurants"}
{"canonical": "restaurant that has at least two neighborhood", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string >=) (number 2)))", "natural": "restaurants that are in two neighborhoods at least"}
{"canonical": "restaurant that takes reservations and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string groups)))", "natural": "groupfriendly restaurants that accept reservations"}
{"canonical": "cuisine that is cuisine of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) en.restaurant.thai_cafe))", "natural": "cuisine like that of thai cafe"}
{"canonical": "meal that thai cafe not serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "natural": "what meals dont the thai cafe serve"}
{"canonical": "restaurant whose cuisine is thai or italian", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.cuisine.thai en.cuisine.italian)))", "natural": "a thai or italian restaurant"}
{"canonical": "restaurant that is good for kids and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string reserve)))", "natural": "restaurants that can be booked in advance ant which de"}
{"canonical": "neighborhood that is neighborhood of the most number of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what neighborhood has the largest number of restaurants"}
{"canonical": "neighborhood that is neighborhood of restaurant that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter))))", "natural": "neighborhood that is neighborhood of restaurant that has waiter service"}
{"canonical": "restaurant that has waiter service and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string credit)))", "natural": "what restaurants take credit cards and offers waiter service"}
{"canonical": "restaurant whose price rating is not 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string !=) (number 2 en.dollar_sign)))", "natural": "list all restaurants that have ratings above 2 "}
{"canonical": "restaurant that has at most two cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string <=) (number 2)))", "natural": "restaurant with no more than two cuisines"}
{"canonical": "restaurant whose cuisine is cuisine that is cuisine of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) en.restaurant.thai_cafe)))", "natural": "what is the type of cuisine of thai cafe"}
{"canonical": "restaurant that is good for kids and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string cuisine) (string =) en.cuisine.thai))", "natural": "thai restaurants that are kid friendly"}
{"canonical": "restaurant that has delivery and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "hotel that offers delivery services and has a price rating of 2 dollar signs"}
{"canonical": "restaurant whose price rating is larger than price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))))", "natural": "restaurants that are more expensive than thai cafe"}
{"canonical": "restaurant that serves lunch and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string takeout)))", "natural": "restaurants that serve lunch and takeout"}
{"canonical": "restaurant that serves two meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "which restaurants serve two meals"}
{"canonical": "neighborhood that is neighborhood of at least two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "neighborhood that is neighborhood of at least two restaurant"}
{"canonical": "restaurant whose star rating is larger than star rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string star_rating)))))", "natural": "restaurants rated more highly than thai cafe"}
{"canonical": "restaurant whose price rating is smaller than 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 2 en.dollar_sign))))", "natural": "restaurant whose price rating is smaller than 2 dollar signs"}
{"canonical": "cuisine that is cuisine of at most two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what cuisine is shown in only two restaurants"}
{"canonical": "restaurant whose cuisine is thai and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "natural": "the restaurant serves lunch as well as thai food"}
{"canonical": "neighborhood that is neighborhood of at most two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "restaurants that are near two neighborhoods"}
{"canonical": "meal that restaurant that is good for kids serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids))))", "natural": "restaurant that serves food for kids"}
{"canonical": "cuisine that is cuisine of restaurant that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve))))", "natural": "what cuisine does the restaurant with reservations have"}
{"canonical": "restaurant whose neighborhood is neighborhood of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string neighborhood))))", "natural": "restaurant who shares a neighborhood with the thai cafe"}
{"canonical": "restaurant that has delivery and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string credit)))", "natural": "restaurants which have delivery and take credit cards"}
{"canonical": "meal that thai cafe serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) en.restaurant.thai_cafe))", "natural": "what kind of meals does thai cafe serve"}
{"canonical": "cuisine that is cuisine of restaurant that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "natural": "list by type of cuisine the restaurants that serve lunch"}
{"canonical": "meal that restaurant that has take-out serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout))))", "natural": "restaurants that offer takeout"}
{"canonical": "restaurant whose cuisine is thai and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string kids)))", "natural": "family friendly thai restaurants"}
{"canonical": "restaurant that serves more than two meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "which resturants serve more than two meals"}
{"canonical": "restaurant whose cuisine is thai and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string credit)))", "natural": "which thai restaurants take credit cards"}
{"canonical": "restaurant whose cuisine is not thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string !=) en.cuisine.thai))", "natural": "what are some restaurants that doesnt serve thai"}
{"canonical": "restaurant whose neighborhood is midtown west and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "natural": "restaurant whose neighborhood is midtown west and that has outdoor seating"}
{"canonical": "restaurant that has waiter service and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string cuisine) (string =) en.cuisine.thai))", "natural": "what thai restaurants offer a waiter service"}
{"canonical": "restaurant whose price rating is 2 dollar signs and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "restaurants with 2 dollar sign rating in midtown west"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "natural": "restaurants with 2 price rating that accept credit cards"}
{"canonical": "restaurant that has waiter service and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string takeout)))", "natural": "which restaurant has waiters and also offers takeout"}
{"canonical": "restaurant that has more than two cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string >) (number 2)))", "natural": "what restaurants have more than two kinds of cuisine"}
{"canonical": "restaurant that takes reservations and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string reserve)))", "natural": "accepts reservations"}
{"canonical": "restaurant that has at most two neighborhood", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string <=) (number 2)))", "natural": "what restaurant can be found in only two neighborhoods"}
{"canonical": "meal that the least number of restaurant serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what restaurant serves the least amount of meals"}
{"canonical": "neighborhood that is neighborhood of restaurant that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor))))", "natural": "what neighborhood has a restaurant that contains outdoor seating"}
{"canonical": "price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))", "natural": "price rating of thai cafe"}
{"canonical": "meal that restaurant whose neighborhood is midtown west serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "natural": "what meal does the midtown west restaurant serve"}
{"canonical": "restaurant that takes reservations and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string cuisine) (string =) en.cuisine.thai))", "natural": "which thai restaurants take reservations"}
{"canonical": "restaurant whose star rating is 3 stars and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string credit)))", "natural": "three star restaurants that accept credit cards"}
{"canonical": "neighborhood that is neighborhood of restaurant that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit))))", "natural": "what neighborhood contains restaurants that accept credit cards"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "natural": "what 2 dollar signs restaurant has outdoor seating"}
{"canonical": "meal that restaurant whose price rating is 2 dollar signs serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "natural": "name a meal served in a restaurant with a price rating of two dollar signs"}
{"canonical": "restaurant that takes credit cards and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string takeout)))", "natural": "restaurant that takes credit cards and that has takeout"}
{"canonical": "restaurant that has outdoor seating and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string kids)))", "natural": "what restaurant is good for kids and offers outdoor seating"}
{"canonical": "neighborhood that is neighborhood of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) en.restaurant.thai_cafe))", "natural": "a neighborhood similar to thai cafes"}
{"canonical": "restaurant that is good for groups and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string takeout)))", "natural": "restaurants with takeout for groups"}
{"canonical": "restaurant that has the most number of cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string max) (string cuisine)))", "natural": "what restaurant has the more cuisine then any other"}
{"canonical": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "natural": "restaurants with 2 or 3 price rating"}
{"canonical": "restaurant that is good for kids and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string credit)))", "natural": "what restaurant is kid friendly and takes credit cards"}
{"canonical": "restaurant that has take-out and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "natural": "what restaurant offers lunch and takeout"}
{"canonical": "restaurant that has take-out and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string groups)))", "natural": "restaurants that have takeout that are good for large parties"}
{"canonical": "restaurant that has delivery and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string waiter)))", "natural": "what restaurant delivers and has waiter service"}
{"canonical": "restaurant that has delivery and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "restaurant with delivery that has a 2 dollar sign rating"}
{"canonical": "restaurant that has outdoor seating and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string waiter)))", "natural": "restaurant that has outdoor seating and that has waiter service"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string delivery)))", "natural": "a delivery restaurant with medium pricing"}
{"canonical": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "natural": "a thai restaurant with medium pricing"}
{"canonical": "restaurant that has waiter service and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string delivery)))", "natural": "find a restaurant that has delivery as well as waiter service"}
{"canonical": "restaurant that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)))", "natural": "what restaurants accept credit cards"}
{"canonical": "restaurant whose cuisine is thai and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string waiter)))", "natural": "what thai restaurant offers waiter service"}
{"canonical": "restaurant whose star rating is larger than star rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string star_rating)))))", "natural": "restaurant whose star rating is larger than star rating of thai cafe"}
{"canonical": "cuisine that is not cuisine of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string !=) en.restaurant.thai_cafe))", "natural": "restaurants with food not like thai cafe"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string meals) (string =) en.food.lunch))", "natural": "restaurants with 2 price rating that serve lunch"}
{"canonical": "restaurant that has delivery and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string takeout)))", "natural": "restaurants that deliver and offer takeout"}
{"canonical": "restaurant whose neighborhood is midtown west and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string reserve)))", "natural": "restaurant whose neighborhood is midtown west and that takes reservations"}
{"canonical": "restaurant whose price rating is 2 dollar signs and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "what restaurant has a price rating of 2 dollar signs"}
{"canonical": "restaurant whose price rating is smaller than price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))))", "natural": "what restaurant has a lower price rating than the thai cafe"}
{"canonical": "restaurant whose price rating is at most price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))))", "natural": "which restaurant has a price rating no higher than thai cafe"}
{"canonical": "restaurant that is good for kids and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string outdoor)))", "natural": "restaurant that is kidfriendly and has an outdoor dining area"}
{"canonical": "restaurant that is good for groups and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string reserve)))", "natural": "what restaurant takes group reservations"}
{"canonical": "restaurant that has two cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) (number 2)))", "natural": "restaurant with two cuisines"}
{"canonical": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "natural": "which is the thai restaurant in this neighbourhood"}
{"canonical": "cuisine that is cuisine of at least two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what cuisine is at at least two restaurants"}
{"canonical": "restaurant that serves at least two meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string >=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "restaurants open for at least two meals per day"}
{"canonical": "meal that thai cafe serves and that thai cafe serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) en.restaurant.thai_cafe) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) en.restaurant.thai_cafe))", "natural": "what is a meal served at the thai cafe"}
{"canonical": "neighborhood that is neighborhood of two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "which neighborhood has two restaurants"}
{"canonical": "restaurant that has outdoor seating and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "restaurant that has outdoor seating and whose neighborhood is midtown west"}
{"canonical": "restaurant that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)))", "natural": "groupfriendly restaurants"}
{"canonical": "restaurant that takes credit cards and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string credit)))", "natural": "which restaurants take credit cards"}
{"canonical": "restaurant that takes reservations and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string cuisine) (string =) en.cuisine.thai))", "natural": "what thai restaurant takes reservations"}
{"canonical": "restaurant that has outdoor seating and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "restaurants in midtown west with outdoor dining areas"}
{"canonical": "restaurant whose star rating is smaller than 3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star)))))", "natural": "what restaurant has less than 5 stars"}
{"canonical": "restaurant whose cuisine is cuisine that is cuisine of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) en.restaurant.thai_cafe)))", "natural": "what restaurants serve the same cuisine as thai cafe"}
{"canonical": "restaurant that is good for groups and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "natural": "hotel that offers lunch and best for group dining"}
{"canonical": "cuisine that is cuisine of less than two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "restaurants that serve the same cuisine"}
{"canonical": "restaurant that is good for kids and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string outdoor)))", "natural": "what restaurants have outdoor dining and are childfriendly"}
{"canonical": "restaurant that serves lunch and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string reserve)))", "natural": "restaurant that serves lunch and takes reservations"}
{"canonical": "restaurant that has less than two cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string <) (number 2)))", "natural": "what restaurant offers only one cuisine"}
{"canonical": "restaurant whose star rating is at least 3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star)))))", "natural": "list all restaurants with 3 or 5 star ratings"}
{"canonical": "restaurant that takes credit cards and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string reserve)))", "natural": "restaurants that accept credit cards and reservations"}
{"canonical": "restaurant that has the least number of neighborhood", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string min) (string neighborhood)))", "natural": "which restaurant chain is found in the fewest neighborhoods"}
{"canonical": "restaurant that is good for groups and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string waiter)))", "natural": "whats a resturant thats good for groups and has waiter service"}
{"canonical": "restaurant that takes credit cards and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string cuisine) (string =) en.cuisine.thai))", "natural": "thai restaurants that take credit cards"}
{"canonical": "restaurant that takes credit cards and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string groups)))", "natural": "what resturant takes credit cards and is good for groups"}
{"canonical": "restaurant that has take-out and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string kids)))", "natural": "restaurants that are good for children and offer takeout"}
{"canonical": "restaurant that is good for groups and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "natural": "group friendly restaurants rated 3 stars"}
{"canonical": "meal that restaurant that is good for groups serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups))))", "natural": "what is a meal served by a restaurant that accommodates groups"}
{"canonical": "restaurant whose price rating is 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign))))", "natural": "restaurant with a 2 or 3 dollar price rating"}
{"canonical": "restaurant whose star rating is smaller than 3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star)))))", "natural": "which restaurant has fewer than 3 or 5 stars"}
{"canonical": "restaurant that has less than two neighborhood", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string <) (number 2)))", "natural": "find a restaurant in a neighborhood"}
{"canonical": "restaurant that has take-out and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string reserve)))", "natural": "restaurants that accept reservations and offer takeout"}
{"canonical": "restaurant that has take-out and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string cuisine) (string =) en.cuisine.thai))", "natural": "list all thai restaurants that offer takeout"}
{"canonical": "restaurant that takes credit cards and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string groups)))", "natural": "what restaurant is good for groups and takes credit cards"}
{"canonical": "restaurant that is good for kids and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string takeout)))", "natural": "restaurant that is good for kids and that has takeout"}
{"canonical": "restaurant that is good for kids and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string reserve)))", "natural": "what restaurant offers reservations and is good for kids"}
{"canonical": "restaurant that is good for kids and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string credit)))", "natural": "what restaurant is good for kids and takes credit cards"}
{"canonical": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "natural": "what neighborhood is thai cafe or pizzeria juno in"}
{"canonical": "meal that restaurant whose star rating is 3 stars serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "natural": "what meal does the 3 star restaurant serve"}
{"canonical": "restaurant that has the most number of neighborhood", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string max) (string neighborhood)))", "natural": "restaurants with the most locations in the area"}
{"canonical": "restaurant whose cuisine is thai and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string groups)))", "natural": "a good thai resturant with room for groups"}
{"canonical": "restaurant whose cuisine is thai and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "natural": "thai restaurants that have takeout"}
{"canonical": "meal that restaurant whose cuisine is thai serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "natural": "restaurant that serves thai meal"}
{"canonical": "restaurant whose star rating is at least star rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string star_rating)))))", "natural": "which restaurants are rated the same or better than thai cafe"}
{"canonical": "restaurant that has delivery and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string cuisine) (string =) en.cuisine.thai))", "natural": "what thai restaurant offers delivery"}
{"canonical": "restaurant whose price rating is not 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string !=) (number 2 en.dollar_sign)))", "natural": "hotel that does not have a"}
{"canonical": "restaurant that takes credit cards and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string kids)))", "natural": "which kid friendly restaurants accept credit cards"}
{"canonical": "restaurant that has take-out and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string meals) (string =) en.food.lunch))", "natural": "a lunch serving restaurant with take out"}
{"canonical": "restaurant that has at most two cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string <=) (number 2)))", "natural": "restaurants with no more than two cuisines"}
{"canonical": "restaurant that is good for kids and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string waiter)))", "natural": "find a good kids restaurant with waiter service"}
{"canonical": "restaurant that takes reservations and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string takeout)))", "natural": "what restaurant offers takeout and has reservations"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string kids)))", "natural": "what 2 dollar signs restaurant is good for kids"}
{"canonical": "average star rating of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating))))", "natural": "average star rating of restaurant"}
{"canonical": "neighborhood that is neighborhood of more than two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "neighborhoods with more than 2 restauraunts"}
{"canonical": "cuisine that is cuisine of restaurant that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit))))", "natural": "cuisine that is cuisine of restaurant that takes credit cards"}
{"canonical": "number of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what is the phone number of the restaurant"}
{"canonical": "restaurant that takes reservations and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string waiter)))", "natural": "restaurants that take reservations and have waiters"}
{"canonical": "restaurant that serves lunch and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string star_rating) (string =) (number 3 en.star)))", "natural": "restaurant that serves lunch and whose star rating is 3 stars"}
{"canonical": "restaurant whose star rating is 3 stars and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string kids)))", "natural": "a 3 star restaurant that is good for kids"}
{"canonical": "neighborhood that is neighborhood of restaurant whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "natural": "which neighborhoods have 3 star restaurants"}
{"canonical": "restaurant that has take-out and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string reserve)))", "natural": "what restaurant has reservations and takeout"}
{"canonical": "neighborhood that is neighborhood of thai cafe or pizzeria juno", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "natural": "neighborhood that is neighborhood of thai cafe or pizzeria juno"}
{"canonical": "restaurant that has delivery and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "restaurants in midtown west that deliver"}
{"canonical": "restaurant that is good for groups and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string groups)))", "natural": "a restaurant that is group friendly"}
{"canonical": "restaurant whose cuisine is thai and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "natural": "thai cuisine restaurant which serves lunch"}
{"canonical": "restaurant that is good for groups and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string delivery)))", "natural": "restaurant that delivers and is good for groups"}
{"canonical": "cuisine that is cuisine of restaurant whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "natural": "what are the cuisines of all the 3 star rating restaurants"}
{"canonical": "meal that thai cafe or pizzeria juno serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "natural": "what kind fo meals do thai cafe and pizzeria juno serve"}
{"canonical": "restaurant whose star rating is at least 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.star))))", "natural": "restaurants rated 3 stars or higher"}
{"canonical": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "natural": "hotel which has a price rating of more than 2dollar or 3 dollar signs"}
{"canonical": "restaurant that has more than two cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string >) (number 2)))", "natural": "restaurant that has two cuisines"}
{"canonical": "restaurant whose price rating is at least 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "natural": "which restaurants have a price rating of 2 to3 dollar signs"}
{"canonical": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "natural": "restaurants with price rating above 3 dollar signs"}
{"canonical": "neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "natural": "which neighborhoods have restaurants with a 2 dollar sign price rating"}
{"canonical": "restaurant that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)))", "natural": "which resturants are good for groups"}
{"canonical": "restaurant that serves less than two meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "which restaurants serve less than two meals"}
{"canonical": "cuisine that is cuisine of restaurant whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "natural": "what restaurants have a rating of 2 dollar signs"}
{"canonical": "restaurant that has outdoor seating and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string meals) (string =) en.food.lunch))", "natural": "restaurants that have outdoor seating and serve lunch"}
{"canonical": "cuisine that is cuisine of restaurant that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups))))", "natural": "what cuisine is good for groups at a restaurant"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "natural": "what restaurants have a price rating of two dollar signs and also accept credit cards"}
{"canonical": "neighborhood that is neighborhood of restaurant that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "natural": "what neighborhood contains restaurants that offer lunch"}
{"canonical": "restaurant that has delivery and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "what 2 dollar signs restaurant offers delivery"}
{"canonical": "restaurant that has take-out and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string waiter)))", "natural": "which restaurant has waiter and takeout service"}
{"canonical": "meal that restaurant that serves lunch serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch)))", "natural": "restaurant with lunch menu"}
{"canonical": "restaurant whose price rating is price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating))))", "natural": "what is the price range for the thai restaurant"}
{"canonical": "restaurant that has delivery and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string kids)))", "natural": "what restaurant delivers and is good for kids"}
{"canonical": "restaurant that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)))", "natural": "find a restaurant with waiter service"}
{"canonical": "restaurant that serves lunch and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string groups)))", "natural": "what restaurants offer lunch and is good for groups"}
{"canonical": "30 reviews or 40 reviews", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 30 en.review) (number 40 en.review)))", "natural": "restaurants with between 30 and 40 reviews"}
{"canonical": "number of meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "what is the number of this meal"}
{"canonical": "restaurant whose star rating is at most star rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string star_rating)))))", "natural": "what thai restaurant has the highest star rating"}
{"canonical": "restaurant whose cuisine is thai and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string delivery)))", "natural": "what thai restaurant has delivery"}
{"canonical": "meal that restaurant whose price rating is 2 dollar signs serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign))))", "natural": "what meal does the restaurant with a 2 dollar price rating serve"}
{"canonical": "restaurant that takes credit cards and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string cuisine) (string =) en.cuisine.thai))", "natural": "which thai restaurant takes credit cards"}
{"canonical": "restaurant that takes reservations and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string credit)))", "natural": "which restaurants take reservations and accept credit cards"}
{"canonical": "neighborhood that is neighborhood of restaurant that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids))))", "natural": "what is the neighborhood with the most restaurants that are good for kids"}
{"canonical": "restaurant whose star rating is 3 stars and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string meals) (string =) en.food.lunch))", "natural": "what are some 3 star restaurants that serve lunch"}
{"canonical": "restaurant whose cuisine is thai and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "find a thai restaurant with a 2 dollar price rating"}
{"canonical": "restaurant that has take-out and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string kids)))", "natural": "what restauarants are kid friendly and have takeout"}
{"canonical": "restaurant that has waiter service and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string reserve)))", "natural": "restaurant that has waiter service and that takes reservations"}
{"canonical": "restaurant whose cuisine is thai and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string meals) (string =) en.food.lunch))", "natural": "list all thai restaurants offering lunch"}
{"canonical": "restaurant that has outdoor seating and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string reserve)))", "natural": "what restaurant offers outdoor seating and takes reservations"}
{"canonical": "restaurant that is good for kids and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string takeout)))", "natural": "which restaurant accepts kids and offers takeout"}
{"canonical": "restaurant whose price rating is price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating))))", "natural": "restaurants with the same price rating as thai cafe"}
{"canonical": "restaurant whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "list all 2 dollar signs restaurants"}
{"canonical": "restaurant that serves lunch and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string delivery)))", "natural": "restaurant that can deliver and is open for lunch"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string credit)))", "natural": "what 2 dollar sign restaurant takes credit card"}
{"canonical": "meal that restaurant whose star rating is 3 stars serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star))))", "natural": "what is a meal served at a threestar rated restaurant"}
{"canonical": "restaurant that has delivery and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string outdoor)))", "natural": "restaurant that delivers and offers outside seating"}
{"canonical": "restaurant that has the least number of cuisine", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string min) (string cuisine)))", "natural": "what restaurant has the smallest number of cuisines"}
{"canonical": "meal that restaurant whose cuisine is thai serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "natural": "what meal does the thai restaurant serve"}
{"canonical": "restaurant that is good for kids and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string groups)))", "natural": "what resturant is good for kids and groups"}
{"canonical": "restaurant that not serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string !=) en.food.lunch))", "natural": "restaurants that are not open for lunch"}
{"canonical": "restaurant that serves lunch or dinner", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.food.lunch en.food.dinner)))", "natural": "which restaurants serve lunch or dinner"}
{"canonical": "restaurant that has outdoor seating and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string outdoor)))", "natural": "what restaurant offers outdoor seating"}
{"canonical": "restaurant whose star rating is at most 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.star))))", "natural": "3 star restraunts and under"}
{"canonical": "restaurant that is good for kids and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "what good kids restaurant is in the midtown west area"}
{"canonical": "restaurant that takes credit cards and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string groups)))", "natural": "what restaurants serve groups and accept credit cards"}
{"canonical": "restaurant whose price rating is at least 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 2 en.dollar_sign))))", "natural": "list all restaurants that are at least 2 dollar signs"}
{"canonical": "restaurant whose neighborhood is midtown west and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "natural": "what midtown west restaurant offers outdoor seating"}
{"canonical": "restaurant that is good for groups and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string credit)))", "natural": "which restaurants are good for groups and accept credit cards"}
{"canonical": "restaurant whose neighborhood is midtown west and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "natural": "which restaurants in midtown west deliver"}
{"canonical": "restaurant whose neighborhood is midtown west and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string star_rating) (string =) (number 3 en.star)))", "natural": "midtown west neighborhood restaurant with 3 star ratings"}
{"canonical": "restaurant that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)))", "natural": "delivery is avaiable"}
{"canonical": "restaurant that has delivery and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string kids)))", "natural": "what good kids restaurant has delivery"}
{"canonical": "meal that the least number of restaurant serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "meals that few restaurants serve"}
{"canonical": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "a thai restaurant in the midtown neighborhood"}
{"canonical": "meal that restaurant that has take-out serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout))))", "natural": "what kind of meals does takeout restaurants serve"}
{"canonical": "restaurant that is good for groups and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string cuisine) (string =) en.cuisine.thai))", "natural": "name some thai restaurants meant for group dining"}
{"canonical": "restaurant whose price rating is smaller than 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "natural": "hotel which has a price rating of less than 2 dollar signs or 3 dollar signs"}
{"canonical": "restaurant whose price rating is at most price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))))", "natural": "which resturants have a price less than or equal to thai cafe"}
{"canonical": "restaurant that serves lunch and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string meals) (string =) en.food.lunch))", "natural": "what restaurants offer lunch"}
{"canonical": "restaurant that has outdoor seating and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string reserve)))", "natural": "what restaurant takes reservations and has outdoor seating"}
{"canonical": "neighborhood that is neighborhood of restaurant whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai)))", "natural": "what neighborhood has the most thai restaurants"}
{"canonical": "restaurant whose neighborhood is not midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string !=) en.neighborhood.midtown_west))", "natural": "what resturant is not in midtown west"}
{"canonical": "restaurant that has waiter service and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string credit)))", "natural": "which restaurants that have waiters take credit cards"}
{"canonical": "restaurant whose price rating is smaller than price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))))", "natural": "restaurant that is cheaper than thai cafe"}
{"canonical": "restaurant whose neighborhood is midtown west or chelsea", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "natural": "a restaurant in west midtown or chelsea"}
{"canonical": "restaurant that takes reservations and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string star_rating) (string =) (number 3 en.star)))", "natural": "restaurants rated 3 stars that accept reservations"}
{"canonical": "restaurant that has outdoor seating and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string groups)))", "natural": "restaurants with outdoor seating and is good for groups"}
{"canonical": "restaurant that takes reservations and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string waiter)))", "natural": "which resturant takes reservations and has waiter service"}
{"canonical": "restaurant whose neighborhood is midtown west and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string outdoor)))", "natural": "restaurants in the midtown west neighborhood with outdoor seating"}
{"canonical": "restaurant whose star rating is 3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star))))", "natural": "which restaurants are rated 3 or 5 stars"}
{"canonical": "restaurant whose cuisine is thai and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string delivery)))", "natural": "restaurant whose cuisine is thai and that has delivery"}
{"canonical": "restaurant that serves lunch and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string star_rating) (string =) (number 3 en.star)))", "natural": "a three star restaurant that serves lunch"}
{"canonical": "restaurant whose star rating is 3 stars and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "what midtown west restaurant has a 3 star rating"}
{"canonical": "restaurant whose cuisine is thai and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "natural": "what thai restaurant offers takeout"}
{"canonical": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "natural": "what cuisine does the midtown west restaurant have"}
{"canonical": "cuisine that is cuisine of two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "which restaurant serves this cuisine"}
{"canonical": "restaurant that has waiter service and that has waiter service", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string waiter)))", "natural": "restaurant that has waiter service and that has waiter service"}
{"canonical": "restaurant whose star rating is smaller than 3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star)))))", "natural": "list all restaurants that areworse than 3 or 5 star rated restaurants"}
{"canonical": "number of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what is the number of restaurants"}
{"canonical": "restaurant that is good for groups and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string delivery)))", "natural": "restaurants for groups with delivery"}
{"canonical": "restaurant whose neighborhood is midtown west and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "natural": "restaurant in mid town west that deliver"}
{"canonical": "restaurant that serves lunch and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string cuisine) (string =) en.cuisine.thai))", "natural": "which thai resturants serve lunch"}
{"canonical": "restaurant that serves two meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "what restaurants have at least 2 meals on the menu"}
{"canonical": "cuisine that is cuisine of the least number of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "cuisine that is cuisine of the least number of restaurant"}
{"canonical": "restaurant that is good for groups and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "natural": "the 3 star restaurant is good for groups"}
{"canonical": "restaurant that is good for kids and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string delivery)))", "natural": "what restaurant is amenable to children and has delivery"}
{"canonical": "restaurant that takes credit cards and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string outdoor)))", "natural": "what restaurants have outdoor seating that take credit cards"}
{"canonical": "restaurant that is good for kids and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string groups)))", "natural": "what restaurants are good for groups and kids"}
{"canonical": "restaurant whose star rating is 3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star))))", "natural": "restaurants with a 3 or 5 star rating"}
{"canonical": "restaurant that has the largest star rating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating))))", "natural": "which hotel has the highest star rating"}
{"canonical": "restaurant that serves lunch and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string credit)))", "natural": "restaurants that serve lunch and accept credit cards"}
{"canonical": "restaurant that has take-out and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string outdoor)))", "natural": "what restaurant offers outdoor seating and takeout"}
{"canonical": "restaurant that has the largest price rating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating))))", "natural": "what is the most expensive restaurant"}
{"canonical": "cuisine that is cuisine of thai cafe or pizzeria juno", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "natural": "restaurants with similar food to thai cafe or pizzeria juno"}
{"canonical": "restaurant whose price rating is at most 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "natural": "restaurants with 3 or lower price rating"}
{"canonical": "cuisine that is cuisine of more than two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what are some cuisines offered by more than two restaurants"}
{"canonical": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "thai restaurants in the midtown west neighborhood"}
{"canonical": "restaurant whose neighborhood is midtown west and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string delivery)))", "natural": "restaurants with delivery in midtown west"}
{"canonical": "restaurant that has delivery and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string takeout)))", "natural": "restaurant that has delivery and that has takeout"}
{"canonical": "restaurant that has waiter service and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string groups)))", "natural": "restaurants that have waiters and are good for groups"}
{"canonical": "restaurant whose price rating is larger than 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 2 en.dollar_sign))))", "natural": "list all restaurants that are more expensive than 2 dollar signs"}
{"canonical": "restaurant that has outdoor seating and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string delivery)))", "natural": "restaurants that have outdoor seating and that deliver"}
{"canonical": "cuisine that is cuisine of the most number of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what is the cuisine of most restaurants"}
{"canonical": "2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))", "natural": "restaurants with a 2 or 3 dollar sign price rating"}
{"canonical": "meal that thai cafe not serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string !=) en.restaurant.thai_cafe))", "natural": "what is a meal that the thai cafe does not serve"}
{"canonical": "restaurant that serves lunch and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "restaurant for lunch rated 2 dollar signs"}
{"canonical": "restaurant that serves the most number of meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string max) (string meals) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "a restaurant with alot of meals"}
{"canonical": "restaurant that is good for groups and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string meals) (string =) en.food.lunch))", "natural": "restaurants that serve lunch that are good for large parties"}
{"canonical": "restaurant that has delivery and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string takeout)))", "natural": "restaurant that has delivery and that has takeout"}
{"canonical": "restaurant whose star rating is smaller than star rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string star_rating)))))", "natural": "which restaurants have star ratings lower than the thai cafe"}
{"canonical": "restaurant that has waiter service and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string kids)))", "natural": "restaurants that are good for children and have waiters"}
{"canonical": "restaurant that is good for groups and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string reserve)))", "natural": "restaurants that are good for group dining and that can be booked in advance"}
{"canonical": "restaurant that has the largest price rating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating))))", "natural": "restaurant that has the largest price rating"}
{"canonical": "restaurant that has delivery and that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string groups)))", "natural": "restaurant that has delivery and that is good for groups"}
{"canonical": "meal that restaurant that has take-out serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout))))", "natural": "what meal can you get for take out at the restaurant"}
{"canonical": "meal that restaurant that takes credit cards serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit))))", "natural": "what restaurant serves meals and accepts credit cards"}
{"canonical": "restaurant whose star rating is at least 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.star))))", "natural": "restaurant that has at least 3 star rating"}
{"canonical": "restaurant that serves more than two meal", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string >) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type))))", "natural": "what restaurant serves more than two meals"}
{"canonical": "restaurant whose price rating is at most price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))))", "natural": "find a restaurant with a price rating equal or less than the thai cafe"}
{"canonical": "cuisine that is cuisine of restaurant that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups))))", "natural": "what kind of restaurant is good for groups"}
{"canonical": "restaurant whose cuisine is thai and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string takeout)))", "natural": "thai restaurants that have takeout"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string outdoor)))", "natural": "what restaurant has a 2 dollar price rating and outdoor seating"}
{"canonical": "neighborhood that is neighborhood of restaurant that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups))))", "natural": "which neighborhood restaurant is good for a group of people"}
{"canonical": "restaurant that takes credit cards and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string meals) (string =) en.food.lunch))", "natural": "what restaurant can i eat lunch and pay with a credit card"}
{"canonical": "restaurant whose price rating is 2 dollar signs and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (number 2 en.dollar_sign)) (string takeout)))", "natural": "which resturants have takeout and a price rating of 2 dollar signs"}
{"canonical": "restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 2 en.dollar_sign) (number 3 en.dollar_sign)))))", "natural": "restaurants with a price rating higher than 3 dollar signs"}
{"canonical": "restaurant that has delivery and that is good for kids", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string kids)))", "natural": "what resturant is good for kids and has delivery"}
{"canonical": "restaurant whose cuisine is thai and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string reserve)))", "natural": "what thai restaurants takes reservations"}
{"canonical": "restaurant whose price rating is price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating))))", "natural": "which resturants have a price rating the same as the thai cafe"}
{"canonical": "restaurant that is good for groups", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)))", "natural": "restaurant that is good for groups"}
{"canonical": "restaurant that is good for kids and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string kids)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "what good kids restaurant has a 2 dollar price rating"}
{"canonical": "restaurant that has waiter service and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string delivery)))", "natural": "restaurant that has waiter service and that has delivery"}
{"canonical": "restaurant whose price rating is at least 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 2 en.dollar_sign))))", "natural": "what restaurant has 2 or greater dollar signs as its price rating"}
{"canonical": "number of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what is the restaurants number"}
{"canonical": "cuisine that is cuisine of restaurant whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west)))", "natural": "cuisine that is cuisine of restaurant whose neighborhood is midtown west"}
{"canonical": "restaurant that has outdoor seating and that has take-out", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string outdoor)) (string takeout)))", "natural": "what takeout restaurant has outdoor seating"}
{"canonical": "restaurant whose star rating is 3 stars and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string outdoor)))", "natural": "restaurants rated 3 stars with outdoor seating"}
{"canonical": "restaurant that takes credit cards and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string credit)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "restaurants with a 2 dollar sign rating that take credit cards"}
{"canonical": "restaurant that has delivery and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string reserve)))", "natural": "restaurant that has delivery and that takes reservations"}
{"canonical": "restaurant whose neighborhood is midtown west and that takes credit cards", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) en.neighborhood.midtown_west) (string credit)))", "natural": "restaurant whose neighborhood is midtown west and that takes credit cards"}
{"canonical": "price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating)))", "natural": "what is the priuce rating of thai cafe"}
{"canonical": "restaurant that serves lunch and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string meals) (string =) en.food.lunch) (string star_rating) (string =) (number 3 en.star)))", "natural": "what restaurants received 3 stars and serve lunch"}
{"canonical": "restaurant that has two neighborhood", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) (number 2)))", "natural": "restaurants with two neighborhood locations"}
{"canonical": "restaurant that has waiter service and that has outdoor seating", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string outdoor)))", "natural": "which hotel offers waiter service and outdoor seating facilities"}
{"canonical": "cuisine that is cuisine of at most two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string <=) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what cuisine is served at no more than two restaurants"}
{"canonical": "restaurant whose star rating is 3 stars and whose cuisine is thai", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string cuisine) (string =) en.cuisine.thai))", "natural": "thai restaurant which has a 3 star rating"}
{"canonical": "restaurant whose price rating is price rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string price_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string price_rating))))", "natural": "restaurant with a price rating equal to thai cafe"}
{"canonical": "cuisine that is cuisine of thai cafe or pizzeria juno", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "natural": "cuisine like thai cafe pizzeria juno"}
{"canonical": "restaurant that is good for groups and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string delivery)))", "natural": "what good group restaurant has delivery"}
{"canonical": "restaurant whose star rating is 3 stars and that takes reservations", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (number 3 en.star)) (string reserve)))", "natural": "what 3 star restaurants accept reservations"}
{"canonical": "meal that restaurant that has delivery serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery))))", "natural": "what is a meal that a restaurant with delivery service has"}
{"canonical": "cuisine that is cuisine of less than two restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.cuisine) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string cuisine)) (string <) (number 2) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what cuisine is served by fewer than two restaurants"}
{"canonical": "restaurant that has take-out and that has delivery", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string takeout)) (string delivery)))", "natural": "restaurants with takeout and delivery"}
{"canonical": "restaurant whose star rating is at most 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 en.star))))", "natural": "list all restaurants that are at least 3 stars"}
{"canonical": "30 reviews or 40 reviews", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 30 en.review) (number 40 en.review)))", "natural": "what restaurants have at least 30 or 40 reviews"}
{"canonical": "3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star)))", "natural": "find 3 star or 5 star restaurant"}
{"canonical": "meal that thai cafe or pizzeria juno serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.restaurant.thai_cafe en.restaurant.pizzeria_juno)))", "natural": "what is a meal that the thai cafe or pizzeria juno serves"}
{"canonical": "3 stars or 5 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (number 3 en.star) (number 5 en.star)))", "natural": "restaurants rated with 3 to 5 stars"}
{"canonical": "restaurant whose star rating is smaller than star rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string star_rating)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string star_rating)))))", "natural": "which resturant has a smaller star rating than thia cafe"}
{"canonical": "restaurant that takes reservations and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve)) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "hotel in midtown west that can be booked in advance"}
{"canonical": "meal that restaurant that takes reservations serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string reserve))))", "natural": "restaurants that accepts reservations"}
{"canonical": "restaurant that has delivery and that serves lunch", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string meals) (string =) en.food.lunch))", "natural": "restaurant that has delivery and that serves lunch"}
{"canonical": "average star rating of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.aggregate (string avg) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating))))", "natural": "what is the average star rating"}
{"canonical": "restaurant that has delivery and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string delivery)) (string star_rating) (string =) (number 3 en.star)))", "natural": "three star rated restaurants that deliver"}
{"canonical": "meal that the most number of restaurant serves", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.food) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string meals)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "meal that the most number of restaurant serves"}
{"canonical": "restaurant that has waiter service and whose price rating is 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string waiter)) (string price_rating) (string =) (number 2 en.dollar_sign)))", "natural": "which restaurants have waiters and a price rating of two dollar signs"}
{"canonical": "restaurant whose neighborhood is midtown west or chelsea", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string neighborhood) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.neighborhood.midtown_west en.neighborhood.chelsea)))", "natural": "what are the hotels found in midtown west or chelsea"}
{"canonical": "restaurant whose star rating is star rating of thai cafe", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string star_rating) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.restaurant.thai_cafe (string star_rating))))", "natural": "a restaurant as good as thai cafe"}
{"canonical": "neighborhood that is neighborhood of the most number of restaurant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.neighborhood) (string !type)) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string neighborhood)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type))))", "natural": "what neighborhood with the most restaurants"}
{"canonical": "restaurant that is good for groups and whose star rating is 3 stars", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string groups)) (string star_rating) (string =) (number 3 en.star)))", "natural": "find a 3 star restaurant that is good for groups"}
{"canonical": "restaurant whose price rating is at most 2 dollar signs", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string price_rating)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 2 en.dollar_sign))))", "natural": "restaurant whose price rating is at most 2 dollar signs"}
{"canonical": "restaurant whose cuisine is thai and whose neighborhood is midtown west", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.restaurant) (string !type)) (string cuisine) (string =) en.cuisine.thai) (string neighborhood) (string =) en.neighborhood.midtown_west))", "natural": "the restaurant that is midtown serves thai food"}
