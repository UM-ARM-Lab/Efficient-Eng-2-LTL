{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less than three assists over a season"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had at least as many blocks in the season as kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "natural": "number of points over a season of player kobe bryant from season 2004"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "how many blocks did kobe bryant make during seasons where he made 3 assists"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or less blocks this season"}
{"canonical": "team of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "natural": "how many turnovers does kobe bryant average over a reason"}
{"canonical": "player that has the smallest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with smallest number of assists over a season"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the fewest allseason turnovers"}
{"canonical": "position of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "natural": "what position diddoes kobe bryant play for the la lakers"}
{"canonical": "player whose position is not point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string !=) en.position.point_guard)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who does not play point guard"}
{"canonical": "player whose number of steals (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has no more than three steals"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more fouls than kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with less blocks than kobe bryant over all seasons"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "note the player with the highest number of rebounds to their credit in any one season"}
{"canonical": "player whose position is not point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string !=) en.position.point_guard)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player did not play point guard"}
{"canonical": "season of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "natural": "what year did kobe bryant have three rebounds"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players played more games than kobe bryant the seasons he played"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "natural": "number of seasons where kobe bryant had three fouls"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "which position has kobe made more than 3 steals from"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "natural": "what was the total number of rebounds for kobe bryant in season where he only had 3 steals"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant in 2004"}
{"canonical": "season of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "natural": "season of player kobe bryant who has 3 turnovers over a season"}
{"canonical": "player whose number of rebounds (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with at least three rebounds in the season"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got the lead for most turnovers in a season"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had the same number of turnovers as kobe bryant"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players played in the 2004 or 2010 seasons"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "which team did kobe bryant play on in 2004"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played less than 4 games per season"}
{"canonical": "season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))", "natural": "which season was kobe bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))", "natural": "how many blocks were made by  kobe bryant"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team did kobe bryant play 3 games for"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same or fewer steals than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same amount of steals in a season or less than kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "natural": "what was the total number of rebounds of kobe bryant in season where he only had three blocks"}
{"canonical": "player whose number of rebounds (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with more than 2 rebounds"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "how many games did kobe bryant play with three blocks"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have during the 04 season"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with the most blocks during the season"}
{"canonical": "player whose number of rebounds (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had 3 or more rebounds"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "natural": "how many games has kobe bryant made more than 3 assists"}
{"canonical": "position of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "natural": "position of player kobe bryant who has played 3 games over a season"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with less than 3 assists per season"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player gets as many assists as kobe bryant if not more"}
{"canonical": "player whose number of rebounds (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not more than 3 rebounds over a season"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of steals over a season is less than that of  of player kobe bryant over a season"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more or less than 3 fouls"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "natural": "how many blocks kob bryant made in the season he made 3 rebounds"}
{"canonical": "player whose number of steals (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with less than 3 steals"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have in three games of the season"}
{"canonical": "number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))", "natural": "how many fouls did kobe have last season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "natural": "how many points did kobe bryant have when he had 3 blocks"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name players with turnover amounts in any one season that are less than the turnover amounts attributable to kobe bryant in any one season"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the same number of turnovers as kobe bryant"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had the most rebounds in a season"}
{"canonical": "player whose number of steals (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string !=) (number 3 steal))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more and less than 3 steals over all seasons"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the same amount of turnovers as kobe bryant over a season"}
{"canonical": "position of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "natural": "what position did kobe bryant play when he had 3 blocks in a season"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "what seasons did kobe bryant have only three blocks"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players are on the same team as kobe bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))", "natural": "how many blocks in a season did kobe bryant have"}
{"canonical": "position of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "natural": "what position did kobe bryant play in 2004"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "natural": "how many steals per season does kobe bryant average when hes also got 3 rebounds"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has played more or less than 3 games"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has maximum two team"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players committing a total number of steals that is larger than the total number of steals committed by kobe bryant in any one season"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have played two or fewer positions"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player scored more points than kobe bryant this season"}
{"canonical": "position of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "natural": "what position did kobe bryant play in the 2004 season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "in how many games has kobe bryant made 3 blocks"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has as much steals as most number of steals kob bryant made over a season"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "who did kobe bryant play for when he had 3 all season rebounds"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have made at least as many blocks as kobe bryant"}
{"canonical": "player whose number of points (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more than 3 points over a season"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "which team was kobe bryant on when he had 3 blocks in a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many rebounds did kobe have in 04"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "number of fouls kobe bryant  who has 3 assists"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with smallest number of fouls over a season"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "which team did kobe bryant make three blocks for"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the least fouls this season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had over all seasons"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant make in seasons where he made 3 fouls"}
{"canonical": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has fewer blocks per season than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with the total number of assists equalling less than 3"}
{"canonical": "player whose number of points (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has made more than 3 points this season"}
{"canonical": "number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.team) (string !type))))", "natural": "how many teams are there"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had no more turnovers in a season than kobe bryant"}
{"canonical": "player that has the smallest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that had the lowest number of assists in a season"}
{"canonical": "player that has less than two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have played less than two positions"}
{"canonical": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played the same or less games than kobe bryant"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of fouls over a season is less than that of player kobe bryant over a season"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of turnovers over a season is same as that of player kobe bryant over a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have after 3 games"}
{"canonical": "player whose number of turnovers (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more or less than 3 turnovers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "natural": "how many fouls has kobe bryant had"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have as many rebounds as kobe bryant over all seasons"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more than 3 blocks this season"}
{"canonical": "team of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "natural": "during the season in which he had 3 turnovers what team was kobe bryant on"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what other players play the same position as kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "turnovers of kob bryant over a season in which he made 3 assists"}
{"canonical": "season of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "natural": "how long has kobe bryant played with more than 3 assists per season"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose steals over a season are not more than steals player kobe bryant over a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "natural": "how many assists has kobe bryant had with three steals"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that had the least amount of turnovers in a season"}
{"canonical": "player whose number of steals (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with fewer than three steals"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have played less than 3 games over all seasons"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "what is the number of positions"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "what position did kobe bryant get 3 steals as"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks has kobe bryant achieved in seasons with at least 3 games played"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the fewest rebounds in one season"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find a player with 3 or more steals in any one season"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had more fouls than kobe bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks has kobe bryant had"}
{"canonical": "kobe bryant or lebron james", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.player.kobe_bryant en.player.lebron_james))", "natural": "either kobe bryant or lebron james"}
{"canonical": "kobe bryant or lebron james", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.player.kobe_bryant en.player.lebron_james))", "natural": "which player is it kobe bryant or lebron james"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "natural": "number of rebounds over a season of player kobe bryant with 3 blocks over a season"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "name the position of kobe bryant when he made three rebounds"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "how many steals in a season did kobe bryant have for the lakers"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player doesnt have 3 assists"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "natural": "how many games did kobe bryant have three assists in over a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many blocks kob bryant made in the season 2004"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "natural": "name the number of turnovers achieved by kobe bryant in 2004"}
{"canonical": "season of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "natural": "in which season did kobe bryant score 3 points"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "natural": "how many rebounds did kobe get after playing 3 fouls"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has had more or less fouls than 3 over a season"}
{"canonical": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same amount of rebounds as kobe bryant"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players play no more than two positions"}
{"canonical": "player whose number of steals (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more than 3 steals"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "team of player kobe bryant 2004 season"}
{"canonical": "team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))", "natural": "teams kobe bryant plays for"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "during which seasons did kobe bryant make 3 blocks"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "how many games did kobe bryant play where he had more than 3 fouls"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had same or more rebounds than kobe bryant over all seasons"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the least amount of blocks"}
{"canonical": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had as many rebounds as kobe bryant in a season"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not more than 3 fouls over a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how  many rebounds in a season did kobe bryant have in 2004"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player gives up te same number of turnovers as kobe bryant each season"}
{"canonical": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played less games than kobe bryant"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more rebounds than kob bryant over a season"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player consistently has more steals per season than kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))", "natural": "how many games has kobe bryant played each season"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more than 3 blocks over a season"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "what player had more blocks than kobe bryant whose number of blocks is 3"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "steals by kobe bryant in 2004"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_rebounds)))", "natural": "what was the total number of season where kobe bryant had just three rebounds"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant lost in seasons with at least 3 points"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "how many games has kobe bryant played"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have over the season he also had three rebounds"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant after having 3 rebounds"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "name the number of total turnovers of kobe bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "natural": "how many blocks as point guard kobe bryant made"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have with three points"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players whose total number of rebounds in a given season is more than the number of rebounds made in a season by kobe bryant"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player scored fewer than 3 points in a season"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who did not have three assists"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less than 4 fouls"}
{"canonical": "player whose position is not point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string !=) en.position.point_guard)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players are not point guards"}
{"canonical": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had fewer rebounds than kobe bryant"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists did player kobe bryant have over this season to get 3 turnovers"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have fewer fouls over a season than that of kobe bryant"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players who have a total number of fouls in any one season equal to or more than that of kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with smaller turnovers over a season than player kobe bryant over a season"}
{"canonical": "season of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "natural": "which year did kobe bryant play for the la lakers"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "which team did kobe bryant play for in 2004"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "what season did kobe bryant only have 3 fouls"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "natural": "who many rebounds in the season did point guard kobe bryant make"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have at most 2 positions"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has less than 3 blocks"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "how many blocks did kobe have during his three point total game"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players with scored assists in any one season tallying at least 3"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has scored the minimum number of points "}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points did kobe score while playing for the lakers"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who made less than 4 blocks over a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "how many rebounds did la laker player kobe bryant have"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he had 3 points"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played 3 or more games"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same or more turnovers than kobe bryant"}
{"canonical": "player whose number of points (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has gotten more than 3 points"}
{"canonical": "player whose number of turnovers (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players with turnover amounts in a given season equalling at most 3"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "natural": "how many steals does kobe get in seasons where hes got more than 3 steals"}
{"canonical": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has lesser assists than kob bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "natural": "how many blocks did kobe bryant make after getting 3 steals"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "natural": "how many games did kobe bryant play where he made three assists"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has not played 3 games over a season"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has a total foul count under 3 for the season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "natural": "how many all season rebounds did kobe bryant have when his turnovers equaled 3"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "number of turnovers over a season of player kobe bryant who has 3 rebounds over a season"}
{"canonical": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has fewer per season assists than  point guard kobe bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "natural": "in 2004 how many allseason blocks did kobe bryant have"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had an equal amount of assists in a season to that of kobe bryants lowest assists total"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played more games than kobe bryant this season"}
{"canonical": "number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))", "natural": "how many fouls does kobe bryant have in a season"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or more blocks"}
{"canonical": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the same number of rebounds in any one season as kobe bryant"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had more assists than kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals did kobe bryant have"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points kob bryant made in the season in which he played for los angeles lakers"}
{"canonical": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had less blocks than kobe bryant over all seasons"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the maximum number of steals"}
{"canonical": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same amount or less of assists as kobe bryant"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players who have a total number of steals in a given season that is less than the total number of steals acquired by kobe bryant in a given season"}
{"canonical": "team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))", "natural": "team of player kobe bryant"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "in what position did kobe bryant get 3 turnovers"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played the most positions"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had equal or more fouls as kobe bryant"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "this is considered the season of player kobe bryant with 3 blocks"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "number of played games over a season of player kobe bryant with 3 points over a season"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players responsible for less than 3 points in any given season"}
{"canonical": "number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))", "natural": "how many assists kob bryant made over a season"}
{"canonical": "team of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "natural": "what team did kobe bryant have 3 steals on"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "how many positions"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he had three blocks"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant make when hes got 3 assists in the season"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had more than 3 turnovers over all seasons"}
{"canonical": "season of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "natural": "in which season did kobe bryant get 3 rebounds"}
{"canonical": "player whose number of steals (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string !=) (number 3 steal))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who do not have three steals over the course of a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player from los angeles lakers or cleveland cavaliers"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played in more games over a season than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or less assists this season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "how many allseason assists did kobe bryant have along with 3 allseason blocks"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the same position as kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many rebounds were  got by kobe bryant in 2004"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who gets 3 or more turnovers each season"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who leads the points race so far this season"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more points than kobe bryant over all seasons"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "natural": "how many turnovers kob bryant made in the season he played for los angeles lakers"}
{"canonical": "team of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "natural": "what team did kobe play for during his three steam season"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player made as many blocks over the season as kobe bryant"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who had a point score that was not three"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "natural": "how many blocks were made by kobe bryant who belonged to the los angeles lakers team"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant who has 3 fouls over a season"}
{"canonical": "2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))", "natural": "either 2004 or 2010"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that player more games in a season than that of kobe bryant"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player from player kobe bryants team"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has less rebound over all seasons"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have made the same number of fouls as kobe bryant in a season"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with fewer than three fouls"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "natural": "how many assists does kobe bryant have over all seasons"}
{"canonical": "season of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "natural": "in which season was it that kobe bryant participated in 3 games total"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "what team did kobe bryant get 3 rebounds in"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with at least three played games"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant played"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "how many rebounds has kobe bryant made so far this season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant who is at point guard"}
{"canonical": "season of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "natural": "in which season kobe has scored  3 points"}
{"canonical": "player whose position is not point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string !=) en.position.point_guard)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name players other than point guard"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant with 3 turnovers over a season"}
{"canonical": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with fouls over a season not more than fouls over a season of player kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "how many all season fouls did kobe bryant have as an la laker"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had less than 3 games played over all seasons"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with no more than three points per season"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no less than 3 all season assists"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant with 3 points over a season"}
{"canonical": "player whose number of fouls (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have committed 3 or more fouls in a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "how many career turnovers has kobe bryant has"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with lesser steals than player kobe bryant over a season"}
{"canonical": "player whose number of turnovers (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had no more than three turnovers"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "98019705layers with the fewest turnovers per game during the season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "how many all season rebounds did kobe bryant have"}
{"canonical": "position of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "natural": "what position did kobe bryant play for the lakers"}
{"canonical": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has played more games over a season player kobe bryant has played over a season"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same number or less rebounds than kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has had more turnovers than kobe bryant during a season"}
{"canonical": "player whose number of rebounds (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has more than 3 rebounds in every season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "natural": "kobe bryants number of games played the season he had 3 rebounds"}
{"canonical": "team of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "natural": "what teams has kobe played for in his career"}
{"canonical": "player whose number of rebounds (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more than 3 rebounds"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has a maximum of 3 blocks"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many all season steals did kobe bryant have in 3 games"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less turnovers than kobe bryant"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player belongs to kobe bryant  steam"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "in which year did kobe bryant have three steals"}
{"canonical": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who gets no more fouls each year than kobe bryant"}
{"canonical": "2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))", "natural": "either 2004 or 2010"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant have in seasons with over 3 steals"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "natural": "fouls by kobe bryant in 2004"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had three or more blocks"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had 3 or more assists over all seasons"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has played more games over a season than player kobe bryan over a season"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had more points than kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had the same or more blocks than kobe bryant"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team is kobe bryant on"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players play for the lakers or cavaliers"}
{"canonical": "point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))", "natural": "name a point guard or a forward"}
{"canonical": "player that has the least number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played for the fewest teams"}
{"canonical": "number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))", "natural": "how many blocks did kobe bryant have over  the season"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made 3 blocks over a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many rebounds did player kobe bryant have during the season 2004"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "how many turnovers kob bryant made in the season he made 3 fouls"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "natural": "during 2004 how many fouls did kobe get against him"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "what was the total number of blocks for kobe bryant in seasons where he had just three fouls"}
{"canonical": "position of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "natural": "in the season he had 3 blocks kobe bryant was playing for what team"}
{"canonical": "point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))", "natural": "players who are forwards or point guards"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have when he made three fouls"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "for which team kob bryant made 3 assists over a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "natural": "number of points over a season of player kobe bryant who has 3 assists over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant give up as point guard"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "for which team did kobe bryant play three games"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks were made by kobe bryant in 3 games"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the least rebounds"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls did kobe bryant have as point guard"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with the fewest turnovers during a season"}
{"canonical": "player that has the largest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos made the most assists from the start of the season"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "which team did kobe bryant play as point guard"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals has kobe bryant got in his career"}
{"canonical": "number of played games (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "natural": "how many games has kobe bryant played"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have in a game where he had three turnovers"}
{"canonical": "player that has the least number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who scored the least on the team"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "natural": "in the season in which he made 3 steals how many games was kobe bryant in"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant ahve when he had 3 fouls"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points does  kobe bryant have for the lakers"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has  played lesser than 3 fouls"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has lesser number of turnovers than kobebryant"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "which team does kobe bryant play point guard for"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "natural": "how many games did kobe have three steals in over the season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "what is the number of rebounds by kobe bryant over the season"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "during the season in which kobe bryants total number of assists was 3 what team was he on"}
{"canonical": "number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))", "natural": "how many blocks does kobe bryant average in a given season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many rebounds has kobe bryant had"}
{"canonical": "season of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "natural": "in which season did kobe bryant have 3 turnovers"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "natural": "in the season in which kobe bryant played 3 games how many turnovers did he have"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "natural": "how many rebounds did kobe have in games where he scored three points"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "natural": "during the season in which he scored 3 points name the number of rebounds he was responsible for kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that had the same number of turnovers in a season as kobe byrant"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the most points this season"}
{"canonical": "player whose number of rebounds (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with a total number of rebounds in a season no greater than three"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played in 2004 or 2010"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "during his season with the los angeles lakers how many points did kobe bryant acquire"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "natural": "in how many games did kobe bryant get 3 steals"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had more rebounds than kobe bryant"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find the player with the highest number of blocks to his credit in any one season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_steals)))", "natural": "find the season in which kobe bryant had a total number of 3 steals"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "over a season which player has the largest number of rebounds"}
{"canonical": "player whose season is season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have played during the same seasons as kobe bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "how many blocks does kobe bryant make in seasons with only 3 fouls against him"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "how many fouls will kobe bryant have in seasons when hes got 3 assists"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has scored at least as many points as kobe bryant"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played more games in a season than kobe bryant"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with the most steals in a season"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had more than 3 blocks"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points did kobe bryant score in 3 games"}
{"canonical": "player whose number of turnovers (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who did not have three turnovers"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points does kobe bryant have on average by game 3 in a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "natural": "how many rebounds kob bryant made over a season in which he made 3 fouls"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had the most steals per season"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has as many allseason steals as kobe bryant"}
{"canonical": "season of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "natural": "did kobe bryant play in 2004"}
{"canonical": "season of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "natural": "season of player kobe bryant whose has 3 points over a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "natural": "how many assists did kobe bryant get after playing 3 fouls"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have during the season"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the most blocks in a season"}
{"canonical": "player whose number of rebounds (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more than 3 rebounds"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "how many fouls in a season did the los angeles lakers kobe bryant commit"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "natural": "how many blocks were made by kobe bryant in 2004"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of blocks of kobebryant"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players play point guard or forward"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "how many games did kobebryant play making 3 fouls"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "what team did kobe bryant play for in 2004"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player did not score 3 rebounds"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "natural": "how many fouls did kobe bryant make in 2004"}
{"canonical": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "natural": "how many assists were got by kobe bryant who belonged to the los angeles team"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "natural": "how many steals did kobe bryant have with three turnovers"}
{"canonical": "number of steals (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "natural": "how many steals did kobe have from point guards from any team"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points did kobe bryant score after 3 games"}
{"canonical": "player whose number of fouls (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "a player with at least 3 fouls"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "natural": "number of assists over a season of player kobe bryant whoplayed 3 games over a season"}
{"canonical": "team of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "natural": "during the season in which he was responsible for 3 steals what was the name of the team kobe bryant was on"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "how many season games did kobe bryant play as an la laker"}
{"canonical": "number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))", "natural": "name the number of assists attributable to kobe bryant during a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "how many allseason rebounds did kobe bryant have as a los angeles laker"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "natural": "in which season did kobe bryant participate in 3 games"}
{"canonical": "player that has the least number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played the fewest positions"}
{"canonical": "number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.team) (string !type))))", "natural": "how many teams are in the nba"}
{"canonical": "season of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "natural": "what season did kobe bryant get 3 assists"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players who have game time in no more than 3 games in a given season"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more steals over a season than that of player kobe bryant over a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points has kobe bryant scored in each season with the los angeles lakers"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "find the season in which kobe bryant committed 3 fouls and note the number of turnovers in the same period"}
{"canonical": "player whose position is not point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string !=) en.position.point_guard)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player is not in the position of point guard"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player plays the position of point guard or forward"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals did kobe get in 04"}
{"canonical": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has no more played games than kobe bryant"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more points than kob bryant over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "natural": "how many games did kobe bryant have three turnovers over the season"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "what position did kobe bryant have 3 assists as"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "number of rebounds over a season of player kobe bryant from los angeles lakers team"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "how many rebounds in a season did kobe bryant have"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "how many assists did kobe bryant have when he had 3 blocks"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "how many blocks did player kobe bryant have with 3 assists over this season"}
{"canonical": "player that has less than two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have been on less than two teams"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more rebounds over a season than that of player kobe bryant over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_steals)))", "natural": "kobe bryant got 3 steals"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that did no play in 2004"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has 3 or more steals in a season"}
{"canonical": "player whose number of steals (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string !=) (number 3 steal))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more or less than 3 steals"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "during the same season that he acquired 3 points how many turnovers did kobe bryant have"}
{"canonical": "team of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "natural": "which team did kobe bryant have 3 steals for"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that played on the same team as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has gotten 3 or less blocks"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played at least 3 games in a season"}
{"canonical": "player that has the largest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the most assists"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or more steals this season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have when he had 3 assists"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the record for steals"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with assists over a season not less than that of player kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls does kobe bryant have at point guard"}
{"canonical": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player averages more turnovers each season than kobe bryant"}
{"canonical": "season of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "natural": "2004 season of kobe bryant"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players are point guards or forwards"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has as many fouls as kobe bryant"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the most blocks in a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "natural": "when did kobe bryant have 3 all season assists"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have as many rebounds as kobe bryant over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "natural": "number of turnovers over a season of player kobe bryant from season 2004"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what position is kobe bryant"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player that has the least fouls over all seasons"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points has kobe bryant gotten in a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "natural": "how many games did kobe bryant play in the 2004 season"}
{"canonical": "team of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "natural": "what team did kobe bryant score 3 points for"}
{"canonical": "season of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "natural": "what season did kobe bryant have 3 turnovers"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "natural": "what was the total number of games played by kobe bryant in season where he had only three rebounds"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "what is the number of the position"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "natural": "how many steals did kobe bryant have when he scored three points"}
{"canonical": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has same rebounds over a season as that of player kobe bryant over a season"}
{"canonical": "2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))", "natural": "which year 2004 or 2010"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has more than 3 turnovers this season"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players responsible for 3 or less fouls in any one given season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "during the year he played for the los angeles lakers how many fouls did kobe bryant have"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls did kobe bryant have in the season in which he played point guard"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "natural": "for the season in which he was responsible for 3 blocks how many fouls did kobe bryant commit"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "natural": "how many assists did kobe bryant make in a season with steals over 3"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "how many blocks has kobe bryant made in seasons with exactly 3 assists"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "in which season did kobe bryant commit 3 fouls"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "natural": "rebounds by kobe bryant over all seasons as point guard"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more than 3 turnovers in each season theyve played"}
{"canonical": "player whose number of steals (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with maximum 3 steals over a season"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had more blocks than kobe bryant"}
{"canonical": "position of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "natural": "what position did kobe bryant play for only three games during the season"}
{"canonical": "team of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "natural": "team of player kobe bryant who has 3 fouls over a season"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose fouls are not 3 over a season"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has 3 or less fouls"}
{"canonical": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players number of games played allseason equaled no less than kobe bryants"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has more blocks per season than kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "natural": "number of rebounds over a season of player kobe bryant with 3 turnovers over a season"}
{"canonical": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have the same or fewer total fouls as kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant who had three rebounds have during the season"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player is at point guard or forward position"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had a maximum of 3 assists"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "what team did kobe bryant play for while making 3 assists per season"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who never played 3 games over a season"}
{"canonical": "team of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "natural": "what team did kobe bryant have 3 turnovers on"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "natural": "how many turnoves has kobe bryant given up in seasons with more than 3 on duty games"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "kobe bryant ended up with how many assists last season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "how many games as kobe bryant played for the la lakers"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the fewest fouls per season"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played in the most games this season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have for the los angeles lakers"}
{"canonical": "number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))", "natural": "how many points did kobe bryant aquire over the entire season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many games has kobe bryant played"}
{"canonical": "position of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string position)))", "natural": "kobe bryant play point guard"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made more than 3 block over a season"}
{"canonical": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has as much steals as kob bryant made over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant who has 3 points over a season"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player leads kobe bryant for rebounds per season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "natural": "how many assists did kobe byrant have during a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have when he had three assists"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has at most 3 assists total in a season"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had a greater number of assists in a season than kobe bryant"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not less than 3 points over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "natural": "how many steals does kobe bryant get in a season when hes got 3 points"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant get in 3 games"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played fewer than 3 games so far this season"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "what was the team of kobe bryant  in 2004"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had equal or more assists than kobe bryant over all seasons"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "kobe bryants rebounds for the season"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "how many all season points did kobe bryant have as point guard"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who plays the same position as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players responsible for less than 3 blocks in any one season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have this season"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "in which season did kobe bryant average 3 blocks"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how any steals did kobe bryant get"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant after getting 3 assists"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "in what position was kobe able to get 3 assists"}
{"canonical": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of blocks over a season is less than that of player kobe bryant over a season"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players all season assists totaled over 3"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players whose total number of assists in any one given season equals at most 3"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has more allseason steals than kobe bryant"}
{"canonical": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played the same number of games as kobe bryant"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played less than 3 games this season"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more steals than kobe bryant over all seasons"}
{"canonical": "player whose number of steals (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players had 3 or fewer steals over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "how many turnovers did kobe when playing with three fouls over the season"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name players who did not play in 2004"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant get after getting 3 steals"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that plat one or two different positions"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "number of points over a season of player kobe bryant who is at point guard"}
{"canonical": "season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))", "natural": "what year did kobe bryant play"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whats the name of a player with less turnovers per season than kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "natural": "for the period of time in which kobe bryant was point guard name the amount of rebounds he had in that season"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not more blocks over a season than player kobe bryant over a season"}
{"canonical": "season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))", "natural": "how many seasons have kobe bryant played"}
{"canonical": "season of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "natural": "season of player kobe bryant who has 3 rebounds over a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have when he had 3 steals"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have who played in three games"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "natural": "in what year did kobe bryant play three games"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player is the most versatile and plays the most number of positions"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played the minimum number of games"}
{"canonical": "player whose number of turnovers (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has got a maximum of 3 turnovers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he had 3 turnovers"}
{"canonical": "player that has less than two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has one team"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "in which season did kobe bryant have three steals"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less turnovers than kobe bryant this season"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has made the minimum number of turnovers"}
{"canonical": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find the player who made the same or a lesser number of assists in the same season as kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "what is the number of turnovers by kobe bryant who made 3 points over the season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "in how many games did kobe bryant make 3 fouls"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points has kobe bryant made in a season when he made 3 plus rebounds"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same amount of assists as kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers did kobe have during the season he averaged three assists"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "natural": "how many steals did kobe bryant have when he had 3 blocks"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists has kobe bryant had"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "has kobe bryant averaged 3 fouls and 3 blocks per game over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "natural": "how many blocks has kobe bryant made playing point guard"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the fewest turnovers this season"}
{"canonical": "number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))", "natural": "how many fouls did kobe bryant have this season"}
{"canonical": "team of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "natural": "what team did kobe bryant play for while having only 3 fouls in a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have when he had 3 points"}
{"canonical": "player whose number of rebounds (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players made at 13 rebounds over the season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "natural": "what is the number of games played by kobe bryant who made 3 rebounds over the season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "natural": "what was the total number of assists over a season for kobe bryant playing point guard"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "natural": "how many games has kobe given up exactly 3 turnovers"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "natural": "how many blocks does kobe bryant usually make if hes already got 3"}
{"canonical": "player whose number of turnovers (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many players acquired less or more that 3 turnovers"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played in the most games"}
{"canonical": "player whose number of steals (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had more that three steals over all seasons"}
{"canonical": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with number of blocks over a season as that of player kobe bryantis"}
{"canonical": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "natural": "number of assists over a season of player kobe bryant whose team is los angeles lakers"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "which is the team of kobe bryant who has played 3 games"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with less than 3 points over a season"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has scored less than three points"}
{"canonical": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "for the season who played the same number of games as kobe bryant"}
{"canonical": "player that has the most number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player that represented most teams"}
{"canonical": "player whose number of points (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "note those players who accrued a total of points in any one season totalling more than 3"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "natural": "kobe bryant had3 turnovers"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more rebounds per season than kobe bryant"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has had points more or less than 3"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who played 2004 to 2010"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player that had more rebounds than kobe bryant this season"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "which year did kobe bryant play point guard"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less fouls than kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "mention the points scored by player kobe bryant who has had 3 rebounds over this season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "natural": "how many steals did kobe get after 3 turnovers"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "natural": "how many rebounds has kobe bryant had"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "how many assists did kobe bryant make during a season"}
{"canonical": "season of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "natural": "which season did kobe bryant have 3 turnovers"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points did kobe bryant score when he had three rebounds"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played less than 4 games over a season"}
{"canonical": "number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.team) (string !type))))", "natural": "number of teams"}
{"canonical": "player whose number of fouls (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more than 3 fouls over a season"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "the player with least blocks over a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "natural": "how many points does kobe bryant get in seasons with 3 assists"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has a minimum of three steals"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have the same number of rebounds as kobe bryant over all seasons"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same or more rebounds as kobe bryant"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the most fouls this season"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had got less than 3 turnovers"}
{"canonical": "player that has the smallest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the fewest assists"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what position kob bryant played in the season he made 3 rebounds"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have had the least amount of turnovers in any one particular season"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the least fouls"}
{"canonical": "player whose number of steals (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players who made more than 3 steals in a given season"}
{"canonical": "player whose number of turnovers (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player not with 3 turnovers over a season"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has most rebounds over a season"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "what position is kobe bryant"}
{"canonical": "player whose number of rebounds (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player makes less than 3 rebounds per career average season"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with the same assist per game average as kobe bryant over a season"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the lowest average blocks per season"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the most rebounds"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of assists over a season is same as that of player kobe bryant over a season"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "which team did kobe bryant play for when he had only three rebounds in a season"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with less and more than 3 rebounds over all seasons"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "team of player kobe bryant who has 3 assists over a season"}
{"canonical": "position of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "natural": "during the season in which he played in 3 games total what position was kobe bryant playing"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "natural": "how many points did kobe bryant score during a season"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that played for either one or two nba teams"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "how many steals did kobe bryant have for the los angeles lakers"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with most points scored over all seasons"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "natural": "how many points did kobe bryant have when he had 3 fouls"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player doesnt average over 3 assists per game"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player didnt have 3 assists"}
{"canonical": "player whose number of blocks (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string !=) (number 3 block))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player not with 3 blocks over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "natural": "what was the complete number of steals in season where kobe bryant had only three points"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more steals than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less than 3 assists"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "note those players with a total number of blocks in any one season that is more than the total number of blocks in any one season acquired by kobe bryant"}
{"canonical": "player whose number of steals (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with no more than 3 steals a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "natural": "how many turnovers  did kobe bryant get after he made 3 blocks"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant with 3 blocks over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "natural": "number of turnovers over a season of player kobe bryant who has 3 turnovers over a season"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more blocks than kobe bryant over a season"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who made the most turnovers over all seasons"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had the most fouls in a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "natural": "player kobe bryant has given 3 fouls over this season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "natural": "name the total points of kobe bryant over the season and note the comparisonn to the player whose total number of blocks throughout the season was 3"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players did not score more than three points in a season"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had as many fouls or more as kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with fewer turnovers during the season than kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "natural": "steals by kobe bryant over all seasons with 3 or more points"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with no more blocks in a season that kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "how many games did kobe bryant play during a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "how many rebounds kob bryant made in the season he played for los angeles lakers"}
{"canonical": "player whose team is not los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string !=) en.team.lakers)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players dont play for the la lakers"}
{"canonical": "season of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "natural": "which year did kobe bryant play in three games"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant with 3 blocks over a season"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had no more than three blocks"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have at least 3 turnovers in a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "natural": "how many games did kobe bryant have 3 steals in"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant from team los angeles lakers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "how many fouls did kobe bryant commit during the same season in which his total number of assists was 3"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals did kobe bryant have in 2004"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant who has played 3 games over a season"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had no more than the number of steals by kobe bryant"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "how many blocks did kobe bryant make when he had three points"}
{"canonical": "player whose number of rebounds (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has 3 allseason rebounds maximum"}
{"canonical": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who had the same number of steals as kobe bryant"}
{"canonical": "player that has the largest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the largest number of assists over the season"}
{"canonical": "number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.team) (string !type))))", "natural": "what is the players number for a certain team"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have when he had 3 fouls"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "natural": "what was the total number of assist for kobe bryant over a season where he had three rebounds"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have gotten time in at least 3 games"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had less than 3 points in a season"}
{"canonical": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with fewer blocks than kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant who has 3 played games over a season"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who is someone with less than 3 blocks in a season"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "what position does kobe bryant play when hes got exactly 3 assists in a season"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "for which team kob bryant made 3 blocks over a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points did kobe bryant score in three played games"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had the most steals"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant get in the seasons he scored 3 points"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "natural": "how many games did kobe bryant play where he made three blocks"}
{"canonical": "player whose number of turnovers (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or less turnovers"}
{"canonical": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had as many blocks as kobe bryant over as season"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more than 3 assists"}
{"canonical": "season of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "natural": "this is the season of player kobe bryant who has played 3 games"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "what team did kobe bryant play for when he had 3 blocks"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points did kobe bryant have over all seasons"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "how many points did kobe bryant score as point guard"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "how many assists did kobe get after scoring 3 points "}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "how many turn overs kob bryant made over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many all season steals did kobe bryant have"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same or less blocks as kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "how many steals did kobe bryant make during a season while playing for the los angeles lakers"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no more than three allseason blocks"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who matches or beats kobe bryant in steals per season"}
{"canonical": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of turnovers over a season is more than that of player kobe bryant over a season"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that did not play in 2004"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with greater than three blocks in a season"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "what position did kobe bryant play when making 3 allseason steals"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played the most positions"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same or less steals than kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "how many fouls has kobe bryant averaged per season as a laker"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "natural": "name the season in which kobe bryant performed 3 blocks"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less fouls than kobe bryant this season"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "what position was kobe player when he had three assists"}
{"canonical": "number of points (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "natural": "what is the points kob bryant scored in season 2004"}
{"canonical": "number of assists (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "natural": "how many assists did kobe bryant have while playing point guard"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "natural": "how many games has kobe bryant had more than 3 turnovers in all seasons"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who had at least as many assists as kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has at least 3 assists over a season"}
{"canonical": "season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))", "natural": "what seasons did kobe bryant play"}
{"canonical": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made number of rebounds same as  kobe bryant over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals did kobebryant get in 2004"}
{"canonical": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the same per season blocks as kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points did kobe bryant have on the los angeles lakers"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "what was the number of turnovers for player kobe bryant when he had just three steals in a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "natural": "how many points were scored by kobe bryant when he made 3 blocks"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has not had three rebounds in a season"}
{"canonical": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who is a player with fewer rebounds than kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "natural": "what was the total number of fouls in a season for kobe bryant when he had only three blocks"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had fewer points in the season than kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string !=) (number 3 block))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has not made3 blocks"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant make in 2004"}
{"canonical": "number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))", "natural": "total points of kob bryant over a season"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played the least amount of games"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "natural": "how many points did kobe bryant have when he had 3 steals"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "natural": "how many fouls did kobe average in his three point total games over the season"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played no more than three games"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the most turnovers in a season"}
{"canonical": "team of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "natural": "kobe bryant belongs to the los angeles lakers team"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "natural": "number of played games over a season of player kobe bryant who has played 3 games over a season"}
{"canonical": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with no more points per season than kobe bryant"}
{"canonical": "player whose team is not los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string !=) en.team.lakers)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who is not a los angleles laker"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "natural": "what is the number of blocks by kobe bryant who made 3 rebounds over the season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant with 3 turnovers over a season"}
{"canonical": "season of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "natural": "stats of kobe bryant during 2004 season"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "what number is kobe bryant and how many assists does he have"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "natural": "how many fouls does kobe bryant have in seasons when he makes a total of 3 steals"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player plays point guard or forward"}
{"canonical": "number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))", "natural": "what is the number of assists by player kobe bryant over the season"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had the most  turnovers in any one season"}
{"canonical": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find the player with a total number of blocks less than the total number of blocks performed by kobe bryant in any one season"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who committed more fouls than kob bryant"}
{"canonical": "position of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "natural": "what position did kobe bryant play when he had three blocks"}
{"canonical": "kobe bryant or lebron james", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.player.kobe_bryant en.player.lebron_james))", "natural": "who is better kobe bryant or lebron james"}
{"canonical": "player that has the most number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which played has played on the most teams"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "what seasons did kobe bryant only have three steals"}
{"canonical": "player that has the smallest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had the least steals"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "what team is kobe bryant on"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "how many different positions are there"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what position did kobe bryant play when he got 3 rebounds"}
{"canonical": "position of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "natural": "what position did kobe bryant play on the lakers"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player did not play in 2004 or 2010"}
{"canonical": "player whose team is not los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string !=) en.team.lakers)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name players who are not in los angeles lakers"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or less points this season"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "what team did kobe bryant play on when he had 3 assists"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "what seasons did kobe bryant play point guard"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had less than or equal the number of rebounds as kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "natural": "how many steals did kobe bryant have in season where he had only three rebounds"}
{"canonical": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players whose total tally of assists is less than the tallly of assists acquired by kobe bryant in the same season"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find the player with assists to his credit for any one season  tallying more than the total number of assists performed by kobe bryant in any one season"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players who have point scores for any one season of no more than 3"}
{"canonical": "player whose number of steals (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many players have less than 3 steals on them in a season"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with most number of blocks over a season"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who are the players with foul totals equivalent in any one season to that of kobe bryant in any one season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant make in 2004"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals did kobe bryant have in the 2004 season"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least three assists last season"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players are point guard or forward"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who made turnovers same as the least turnovers made by kob bryant over a season"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more all season points than kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "during the season in which his point tally was 3 how many games was kobe bryant in"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have 3 or more assists over the season"}
{"canonical": "player whose position is not point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string !=) en.position.point_guard)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players arent point guards"}
{"canonical": "player whose number of fouls (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had more than three fouls per game over the season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "natural": "how many allseason blocks did kobe bryant have as an la laker"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many allseason points did kobe bryant score when rebounds equaled 3"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "natural": "how many points kob bryant made over a season in which he made 3 assists"}
{"canonical": "team of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "natural": "to which team does kobe bryant belong who scored 3 points"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "natural": "how many steals did kobe get after getting 3 assists"}
{"canonical": "season of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "natural": "how many seasons has kobe bryant scored more than 3 points"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of fouls over a season is same as that of player kobe bryant over a season"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no fewer allseason steals than kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "during the same season that he participated in 3 games name the number of fouls committed by kobe bryant"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players plays in two positions"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with two positions"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many steals did kobe bryant make over the season"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player that plays in two positions"}
{"canonical": "player whose number of rebounds (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with more than three rebounds this season"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what position does kobe bryant play"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "how many games did kobe bryant play during the season his total number of blocks equaled 3"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players whose point scores in any one season are less than the total point scores of kobe bryant"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that had the least amount of rebounds in a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he had 3 steals"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant wit 3 steals over a season"}
{"canonical": "number of player", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.player) (string !type))))", "natural": "how many players are there"}
{"canonical": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whoplayed less games over a season than player kobe bryant has played over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "natural": "how many games in a season did kobe bryant have 3 steals"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the largest number of all season fouls"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played more than 3 games"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who played more than 3 games over a season"}
{"canonical": "player whose number of steals (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more than 3 assists over a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "natural": "how many fouls kob bryant made in the season in which he made 3 rebounds"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player takes more fouls than kobe bryant or the same per season"}
{"canonical": "player whose team is not los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string !=) en.team.lakers)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player does not belong to the los angeles lakers team"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more assists than kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he made three turnovers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "natural": "how man fouls did kobe bryant have in all seasons where he had three rebounds"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he played in three games"}
{"canonical": "number of assists (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "natural": "during his season playing point guard how many assists was bryant kobe responsible for"}
{"canonical": "point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))", "natural": "player who plays position point guard or forward"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with less points over a season than that of player kobe bryant over a season"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with fewer than three blocks per season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "how many games has kobe been in since he went pro"}
{"canonical": "player whose number of fouls (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who had at least three fouls in the season"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player does not have3 rebounds"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "natural": "number of fouls of kobe bryant who has 3 blocks"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many threepoint turnovers did kobe bryant have"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "what season did kobe bryant play point guard"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "how many points did kobe bryant score in the position of point guard"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the fewest rebounds ever"}
{"canonical": "number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))", "natural": "how many fouls were played by kobebryant"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals kob bryant made over a season"}
{"canonical": "season of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "natural": "how many seasons has kobe bryant played for the lakers"}
{"canonical": "position of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "natural": "what position was kobe playing when he blocked three shots"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more points per season than kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player made more than 3 blocks over the season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many steals did kobe bryant have after 3 games"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player plays the most positions"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had the same number of fouls in a season that kobe bryant had"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "how many fouls did kobe bryant have on the los angeles lakers"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the fewest allseason blocks"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_steals)))", "natural": "how many steals did kobe bryant make in seasons where he made 3 rebounds"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "natural": "how many steals did kobe bryant have in the game in which he had three blocks"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with minimum 3 steals over a season"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player scored equal or less points as kobe bryant"}
{"canonical": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have made fewer assists than kobe bryant"}
{"canonical": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has had at least as many games played as kobe bryant over a season"}
{"canonical": "player whose number of steals (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string !=) (number 3 steal))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player does not have 3 steals"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had fewer turnovers than three"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "natural": "what was the total number of turnovers in a season for kobe bryant at point guard"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "natural": "how many rebounds can kobe bryant make in one season"}
{"canonical": "player whose number of steals (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string !=) (number 3 steal))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who is a player that doesnt make even 3 steals per season"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got the lead for fouls in a season"}
{"canonical": "player whose number of fouls (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not less than 3 fouls over a season is at least 3"}
{"canonical": "number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))", "natural": "how many points did kobe bryant score this season"}
{"canonical": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "is there a player with the same per season point average as kobe bryant"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had the same or more steals kobe over the season"}
{"canonical": "player whose season is season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players played in the same season as kobe bryant"}
{"canonical": "season of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "natural": "what season did kobe bryant have 3 allseason assists"}
{"canonical": "player that has less than two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played for only one team"}
{"canonical": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less assists than kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many rebounds made by kob bryant over a season in which he played 3 games"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "how many assists did kobe bryant have when he had 3 points"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "natural": "how many points did kobe bryant score in a single season where he had exactly three assists"}
{"canonical": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same number of fouls as kobe bryant allseason"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant average in games with more than 3 rebounds for him"}
{"canonical": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players played games same as the least number of games played by kobe bryant over a season"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player scored less points than kobe bryant"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more or equal number of rebounds than kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more than 3 turnovers"}
{"canonical": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has as much fouls as maximum fouls kob bryant made over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "in how many games during a single season did kobe bryant have more than three blocks"}
{"canonical": "player whose number of steals (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string !=) (number 3 steal))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player did not have 3 steals"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "natural": "how many rebounds did kboe bryant have when he had 3 points"}
{"canonical": "team of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "natural": "which team does kobe bryant play for which has less than 3 turnovers"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who plays for the los angeles lakers or cleveland cavaliers"}
{"canonical": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made as much points as kob bryant made over a season"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the most career blocks per season"}
{"canonical": "position of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "natural": "which position did kobe bryant play in 2004"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks did kobe bryant make during the season"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with fewer than three assists"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "team of player kobe bryant who is at point guard"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "what position does kobe bryant play in his best scoring seasons"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "natural": "when kobe bryant had 3 allseason assists how many rebounds did he have"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "what player had more blocks than kobe bryant whose number of assists is 3"}
{"canonical": "number of steals (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "natural": "the total number of steals in all seasons for point guard kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with less than 3 turnovers in a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls in a season has point guard kobe bryant had"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many steals did kobe bryant have in three played games"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "how many steals kob bryant made in the season in which he played in los angeles lakers team"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "how many assists kob bryant made in the season in which he made 3 blocks"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "natural": "how many points did kobe bryant score when he averaged 3 assists per game over the season"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team did kobe bryant play for"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "natural": "how many games has kobe bryant played in the last 3 seasons"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "natural": "how many rebounds did kobe get after he made 3 blocks"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "what position did kobe bryant play"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players did not play in 2004"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of turnovers of kobe bryant"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player did not score 3 points"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks kob bryant made in the season in which he played 3 games"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "how many games did kobe bryant play in the year he had three fouls"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "natural": "when kobe bryant has given up 3 turnovers in a season how many fouls has he typically given"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "natural": "how many fouls in a single season did kobe bryant have that is greater than three turnovers"}
{"canonical": "season of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "natural": "what season did kobe bryant score 3 points"}
{"canonical": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players scored as many points as kobe bryant over all seasons"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "how many fouls did kobe bryant get called for the season he had 3 assists"}
{"canonical": "number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.team) (string !type))))", "natural": "what is the number of the team"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have had fewer turnovers per season than kobe bryant"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players whose number of points is less than 3 over a season"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less than 3 blocks"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "what point guard players had more points than kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have after 3 games"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players who have participated in less or more than 3 games in a given season"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same or more turnovers as kobe bryant"}
{"canonical": "team of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "natural": "what is the team of kobe  bryant who played 3 fouls"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played in the fewest games in a season"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player plays either point guard or forward"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player belongs to the los angeles lakers team or cleveland cavaliers"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more rebounds than kobe bryant"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "season of player kobe bryant who is at point guard"}
{"canonical": "player that has the least number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with lowest jersey number"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_blocks)))", "natural": "how any blocks did kobe make after getting 3 rebounds"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "natural": "how many points kob bryant made in the season he made 3 turnovers"}
{"canonical": "season of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "natural": "in what season did kobe bryant score a total of 3 assists"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more points over a season than that of player kobe bryant over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "natural": "in how many games did kobebryant get3 turnovers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "natural": "name the season during which kobe bryant committed 3 fouls"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "what season did kobe bryant have 3 fouls"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "in which position did kobe score 3 points"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many players had game time in at least 3 games over the season"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with a total number of steals in a season that is equal to the lowest number of steals in a season for kobe bryant"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "when kobe bryant had 3 assists in a season what was his position"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "natural": "points of kob bryant over a season in which he made 3 blocks"}
{"canonical": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same or less fouls as kobe bryant"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more than 2 points over a season"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made least points"}
{"canonical": "player that has the smallest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the least assists this season"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who were kobe bryants team mates"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "natural": "kobe bryant made 3 blocks"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no more turnovers per season than kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "number of turnovers over a season of player kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "natural": "how many fouls did kobe bryant score during the season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "natural": "how many points did kobe bryant score in the season that he had three steals"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "natural": "during his season as point guard how many blocks did kobe bryant perform"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that overall outrebounded kobe bryant during the season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "natural": "how many assists has kobe bryant had"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of fouls"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have a total number of fouls over a season that is not 3"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of steals of kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more blocks than kobe bryant this season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have over the season in which he played 3 games "}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "which season did kobe bryant average over 3 steals a game"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more steals than kobe bryant this season"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has been in the least number of games in any one season"}
{"canonical": "player that has the most number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player was on the most teams"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "the player who made most fouls over a season"}
{"canonical": "player whose number of fouls (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had more than three fouls in the season"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with at least as many turnover as kobe bryant"}
{"canonical": "position of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "natural": "in what position was kobe able  to make 3 blocks"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "natural": "how many assists did kobebryant get  after getting 3 steals"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "natural": "what is the number of assists by kobe bryant who made 3 assists over the season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant get as point guard"}
{"canonical": "number of played games (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "natural": "number of played games over a season of player kobe bryant who is at point guard"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has made a minimum of 3 blocks"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players scored more or less than 3 points in a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "number of played games over a season of player kobe bryant whose team is los angeles lakers"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who made lesser steals than kob bryant over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "as a laker how many steals has kobe bryant averaged per season"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has fewer steals per season on average than kobe bryant"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the most fouls"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "natural": "for the season in which he had 3 blocks to his credit how many steals were attributable to kobe bryant"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has been in for only 1 or 2 games in a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant make over a season when played as point guard"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant after getting 3 steals"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "natural": "how many steals kob bryant made in the season he made 3 assists"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant give up during the 2004 regular season"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the fewest all season fouls"}
{"canonical": "season of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "natural": "season of player kobe bryant from los angeles lakers team"}
{"canonical": "position of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "natural": "what position did kobe bryant play for the los angeles lakers"}
{"canonical": "number of played games (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "natural": "how many games did kobe bryant play in the 2004 season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "natural": "how many steals did kobe bryant have when he had 3 turnovers"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what was the position of kobe bryant when he played 3 fouls"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many seasons has kobe played more than 3 games and whats his career rebound total"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had at most 3 games allseason"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "natural": "in seasons with more than 3 steals how many blocks did kobe bryant have"}
{"canonical": "player whose number of rebounds (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with no more than three rebounds in the season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "how many turnovers did kobebryant get"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team will kobe bryant be on this year"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "natural": "how many turnovers did kobebryant get in 2004"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "what position did kobe bryant have 3 turnovers as"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant who had three blocks have"}
{"canonical": "player that has the most number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played for the most teams"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "player kobe bryants number of rebounds over a season"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more points than kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant from team los angeles lakers"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has more than 3 allseason blocks"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "natural": "how many rebounds does kobe bryant make by the time hes got 3 points in a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant with 3 fouls over a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists did kobe bryant get after 3 turnovers"}
{"canonical": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos a player with less games played than kobe bryant"}
{"canonical": "player that has the least number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the least position"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "natural": "during the 2004 season how many turnovers did kobe bryant acquire"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "what position did kobe play when her had three turnover this season"}
{"canonical": "season of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "natural": "what seasons did kobe bryant play for the la lakers"}
{"canonical": "position of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "natural": "what is the position of kobe bryant in los angeles lakers team"}
{"canonical": "player whose number of turnovers (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have less than 3 turnovers this season"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has made the maximum number of blocks"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he had 3 points"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "how many positions are there"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had no more rebounds over a season than that of kobe bryant"}
{"canonical": "position of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "natural": "position of player kobe bryant from 2004 season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "how many rebounds has kobe bryant had"}
{"canonical": "team of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string team)))", "natural": "team of player kobe bryant who has 3 steals over a season"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who did not play in 2004"}
{"canonical": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who assists over a single season is at least the same as kobe bryants"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "what team does kobe bryant play for"}
{"canonical": "player whose number of rebounds (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos averaged no more than 3 rebounds each season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "natural": "how many points does kobe bryant average in seasons with 3 fouls"}
{"canonical": "team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))", "natural": "what is kobe bryants team"}
{"canonical": "player whose number of rebounds (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players with rebounds in any one season equalling less than 3"}
{"canonical": "player that has less than two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players hold two or less positions"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "what team did kobe play for during the season he average three blocks"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "natural": "what was the total number of assist in a season for kobe bryant when he had 3 steals"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "natural": "kobe bryans assists for the season he had 3 assists"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less than or the same number of turnovers as kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "natural": "during the season in which kobe bryant managed 3 assists how many games did he play in"}
{"canonical": "player that has the smallest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the fewest steals all season"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players with total foul tallies of less than 3 in any one particular season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he had 3 assists"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same or more steals as kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "points of kob bryant over a season in which he played in point guard"}
{"canonical": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have played in the same amount or more games than kobe this season"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "has kobe bryant averaged 3 rebounds a season while playing for any team"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "natural": "when kobe bryant has had 2 blocks in a season how many turnovers had he made"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players did not play in the 2004 season"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with most turnovers over a season"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with most number of steals over a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "natural": "number of points over a season of player kobe bryant who has 3 blocks over a season"}
{"canonical": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that scored the same or fewer points than kobe during the season"}
{"canonical": "position of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "natural": "what position did kobe bryant play 3 games as"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals did kobe bryant make"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "which team did kobe bryant play for with three assists"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more than 3 turnovers over all seasons"}
{"canonical": "position of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "natural": "what is the position of kob bryant in the season he played 3 games"}
{"canonical": "season of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "natural": "which is the season kob bryant made 3 fouls"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_turnovers)))", "natural": "how many turnovers kob bryant made in season 2004"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "natural": "how many assists did kobe bryant have who had three rebounds"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "in which seson did kobe get 3 steals"}
{"canonical": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has not played more games than player kobe bryantover a season"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player played in 2004 or 2010"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "whats the per season average for points scored while kobe bryant was at point guard"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "how many blocks kob bryant made over a season in which he made 3 fouls"}
{"canonical": "number of player", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.player) (string !type))))", "natural": "what is number of the player"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got the same number of fouls as kobe each season theyve played"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of points of kobebryant"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players with point tallies in any one season either less than or more than 3"}
{"canonical": "number of assists (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "natural": "how many assists did kobe bryant get when he was in the position of point guard"}
{"canonical": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same or less points this season as kobe bryant"}
{"canonical": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player tied kobe bryants highest seasonal point score in a single season"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players who have performed blocks in any one season tallying to the same amount as those blocks performed by kobe bryant in any one season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers kob bryant made in the season he made 3 points"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points had kobe bryant scored after 3 rebounds"}
{"canonical": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the same number of points in the season as kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "natural": "how many rebounds does kobe bryant have a season with 3 turnovers"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "natural": "how many fouls in a single season did kobe bryant have that is greater than three assists"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had more points in a season than kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant make"}
{"canonical": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with the same number of played games as kobe bryant over all seasons"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "what was the position of kob bryant in the season he made 3 turnovers"}
{"canonical": "player whose number of fouls (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player played more than 3 fouls"}
{"canonical": "player whose number of fouls (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had more than three fouls over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))", "natural": "how many blocks has kobe bryant had"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had no more than three assists during the season"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played the record number of games in a season"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team was kobe bryant on when he played less than three games in a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "how many games did kobe bryant play for the los angeles lakers"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "natural": "during the season in which kobe bryant had game time in 3 games how many assists was he responsible for"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "whats kobe bryants season turnover average"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the most steals during a single season"}
{"canonical": "season of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "natural": "what year did kobe bryants points total three"}
{"canonical": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players whose tally of games participated in is smaller than the number of games in which kobe bryant has had game time in"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant when he scored 3 points"}
{"canonical": "number of steals (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "natural": "how many steals did point guard kobe bryant have over the season"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who has had more blocks than kobe bryant"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "position of player kobe bryant who has 3 turnovers over a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "natural": "what player had more blocks than kobe bryant whose number of points is 3"}
{"canonical": "team of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "natural": "team of player kobe bryant with 3 points over a season"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "kobe bryants team when he had 3 rebounds for the season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "how many three point assists does kobe bryant have in a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "natural": "how many assists kob bryant made in season 2004"}
{"canonical": "player that has the least number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has played the least number of positions"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has under 3 assists all season"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "what position did kobe bryant play when he made three assists"}
{"canonical": "season of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "natural": "in which seasons kob bryant made 3 assists"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less than 3 turnovers"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points has kobe bryant gotten this season"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "what position did kobe bryant play when his all season points equaled 3"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the most turnovers"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players scored less points over the season than kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find a player with 3 or less blocks in any given season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "natural": "the number of turnovers of player kobe bryant over this season is 3"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has at least as many all season points as kobe bryant"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played 3 or less games"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose assists over a season is at most 3"}
{"canonical": "player whose number of steals (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who have less than three steals in a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "natural": "how many games kob bryant played in point guard position over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many games kob bryant played over a season in which he made 3 points"}
{"canonical": "number of points (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "natural": "what players had more points than kobe bryant in 2004"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant get after 3 turnovers"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of blocks over a season is not less than that ofplayer kobe bryant over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "natural": "how many steals did kobe bryant make over the season when made only 3 turnovers"}
{"canonical": "number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))", "natural": "what is kobe bryants allseason point total"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which plater made the least amount of blocks during the season"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player didnt play 3 games"}
{"canonical": "player whose number of turnovers (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made less than 4 points in a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant made in 3 games"}
{"canonical": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with more turnovers per season than kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant have in a season he has 3 rebounds"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "how many assists did kobe bryant have allseason when had also had 3 points"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "during his los angeles lakers season how many rebounds did kobe bryant have"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "natural": "how many steals did kobe bryant have during the season when averaging three assists"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "in which seasons kob bryant made 3 blocks"}
{"canonical": "player whose number of points (over a season) is number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of points over a season is same as that of player kobe bryantcover a season"}
{"canonical": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with the same number of blocks as kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have over the season for the la lakers"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have played at most two positions"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less than 3 turnovers"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got more than 3 assists each season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "natural": "number of turnovers over a season of player kobe bryant from team los angeles lakers"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "what was the total number of assists in seasons where kobe bryant had just three points"}
{"canonical": "number of player", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.player) (string !type))))", "natural": "what is the number of the player kobe bryant"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many asists kob bryant made over a season in which he made 3 turnovers"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "natural": "how many assists did kobe bryant have after 3 games"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has equal to or more than 3 turnovers"}
{"canonical": "number of steals (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "natural": "how many steals did kobe bryant have as point guard"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "what position did kobe bryant play when his allseason turnovers equaled 3"}
{"canonical": "player whose number of steals (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more than 3 steals"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had a total number of rebounds in a season not equal to three"}
{"canonical": "number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.team) (string !type))))", "natural": "how many teams are there"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played more than 3 games in a season"}
{"canonical": "player whose season is season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played in the same season as kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "natural": "kobe bryant played three games"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played 3 or more games"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who have played fewer than 3 games in a season"}
{"canonical": "player that has the least number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the smallest number on the team"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player played fewer than three games"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists did kobe bryant have when he made three turnovers"}
{"canonical": "player whose number of fouls (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more or equal to 3 fouls"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "natural": "how many games did kobe bryant play who had turnovers"}
{"canonical": "season of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "natural": "which season did kobe bryant play 3 games"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "what year did kobe bryant have exactly 3 steals"}
{"canonical": "player whose number of turnovers (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with at most 3 turnovers over a season"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the same number of fouls as kobe bryant"}
{"canonical": "los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))", "natural": "either los angeles lakers or cleveland cavaliers"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got the record for most rebounds in a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "natural": "how many assists has kobe bryant had"}
{"canonical": "season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))", "natural": "when did kobe bryant play"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had less steals than kobe bryant"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what position was kobe bryant in when he made 3 fouls in a season"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many players have been on the lakers or cavaliers"}
{"canonical": "player that has the smallest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of steals"}
{"canonical": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had the same games played than kobe bryant over all seasons"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "in which team did kobe bryant play in season 2004"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player plays the same position as kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he had 3 rebounds"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have on the los angeles lakers"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have in a season he had 3 assists"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has got a minimum of 3 turnovers"}
{"canonical": "number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))", "natural": "how many assists has kobe bryant got for this season so far"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "natural": "how many season did kobe bryant have no more than three assists"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "how many assists did kobe bryant have with three blocks"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "how many blocks kob bryant made over a season in which he made 3 assists"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players whose number of turnovers in a season is no more than that of kobe byrant"}
{"canonical": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the maximum points of kobe bryant"}
{"canonical": "number of player", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.player) (string !type))))", "natural": "how many players"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "what was the total number of steals in seasons where kobe bryant had only played three games"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or more assists"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played the greatest number of positions"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "what is the number of games played by kobe bryant whose team is los angeles lakers over the season"}
{"canonical": "player whose number of blocks (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string !=) (number 3 block))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more and less than 3 blocks over seasons"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players committed more fouls that kobe bryant over a season"}
{"canonical": "position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))", "natural": "what position does kobe bryant play"}
{"canonical": "position of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "natural": "what position did kobe bryant play in the 2004 season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant have over all seasons"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have less fouls than kobe bryant over all seasons"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player gets more blocks than  kobe bryant or at least the same"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played for no more than two teams"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "how many games was kobe bryant in during the season that he played with the los angeles lakers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant when he was at point guard"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points did kobe bryant score over the season in which he played 3 games"}
{"canonical": "number of played games (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "natural": "how many games did kobe bryant play in during the 2004 season"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players with a total number of turnovers in any one specific season that is less than 3"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "what was the total number of blocks in a season for kobe bryant when he had three assists"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "natural": "how many rebounds has kobe bryant had"}
{"canonical": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "natural": "how many assists did kobe bryant of the lakers have"}
{"canonical": "player whose number of rebounds (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no less than 3 allseason rebounds"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played the most games"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many rebounds has players that are not the 3 had"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played more than 3 games"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the fewest rebounds"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has more than 3 assists to their credit per season"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the least points"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "whats the number of assists kobe bryant gets in a season when hes got 3 or more blocks"}
{"canonical": "season of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "natural": "which season kob bryant made 3 rebounds"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what was the position of kobe bryant"}
{"canonical": "player that has less than two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player plays fewer than two positions"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the least points this season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "in how many games did kobe score 3 points"}
{"canonical": "player that has the least number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played the fewest positions"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same amount of turnovers as kobe bryant"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has held the most positions"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_points)))", "natural": "how many points does kobe bryant have allseason when he also has 3 blocks"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with the same or fewer blocks per season as kobe bryant"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players played the most games in a season"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played with at most two teams"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had more steals than kobe bryant over all seasons"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "natural": "how many all season rebounds did kobe bryant have as point guard"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with at least as many steals as kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "how many games did kobe bryant play in a season where his number of blocks were over 3"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "natural": "how many points did kobe bryant score in the season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "natural": "name the season in which kobe bryants total point score was 3"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have at least as many turnovers that kobe bryant has during a season"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "what position did kobe bryant get 3 points as"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with assists not equal to three in a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "how many assists did kobe bryant make in the season in which he scored three points"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "how many fouls does kobe bryant average over a season"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less than 4 assists in a season"}
{"canonical": "position of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "natural": "what is the position of kobe bryant in season 2004"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "what team did kobe bryant play for in the 2004 season"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "name kobe bryants position when he had three turnovers"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more fouls over a season than player kobe bryant"}
{"canonical": "player that has the least number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has minimum number of teams"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the least number of points in this season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant who has played 3 games over a season"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "what position was kobe bryant playing when he had the season in which he had 3 steals"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less points than kobe bryant in a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "natural": "during the season he scored he 3 points what was the number of fouls kobe bryant was responsible for"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have the same number of fouls as kobe bryant over all seasons"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "natural": "how many fouls does kobe bryant average in seasons limited to 3 rebounds"}
{"canonical": "team of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "natural": "which is the team of kobebryant who had 3 turnovers"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same amount of assists as kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "natural": "when kobe bryant had 3 allseason turnovers how many allseason points did he have"}
{"canonical": "player whose number of rebounds (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had 3 or less rebounds"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "natural": "number of points over a season of player kobe bryant who has 3 turnovers over a season"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more steals than kob bryant made over a season"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had few steals over the season than kobe bryant"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less than 3 points this season"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with a total amount of blocks in a season equal to the most blocks in a season for kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "natural": "how many points did kobe bryant score in the game that he had three steals last season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "natural": "how many assists did kboe bryant have when he had 3 steals"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals did kobe bryant have in the 2004 season"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the most points"}
{"canonical": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that had were outrebounded by"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what is the position of player kobe bryant with 3 rebounds over this season"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with less than three fould per game over the season players with the fewers"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with the least played games in a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "natural": "how many turnovers does point guard kobe bryant have in a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "natural": "find the number of blocks in the season in which kobe bryant  also acquired 3 steals"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "natural": "how many rebounds and assists does kobe bryant have over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many allseason blocks did kobe bryant have in 3 allseason games"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "natural": "how many points did kobe bryant who had three turnovers have"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with less than 3 blocks over all seasons"}
{"canonical": "player whose number of steals (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less than 3 steals"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that average at least three assists per game over a season"}
{"canonical": "player that has the smallest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the least steals this season"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who plays for either la lakers or cleveland cavaliers"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less points than kob bryant over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have in a season he had 3 points"}
{"canonical": "season of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string season)))", "natural": "kobe bryant played in the season 2004"}
{"canonical": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who has played as many games as kobe bryant"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with less than three fouls in a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "natural": "how many fouls has kobe bryant had"}
{"canonical": "season of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string season)))", "natural": "what season did kobe bryant score 3 points"}
{"canonical": "number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))", "natural": "how many points were scored by kobe bryant"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "in what season did kobe only give up 3 fouls"}
{"canonical": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "natural": "what was the total number of assists in all seasons for player kobe bryant when he was with the lose angeles lakers"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same or more fouls as kobe bryant"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the same number of all season assists as kobe bryant"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more than 3 assists"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has scored lesser points than kobe bryant"}
{"canonical": "player whose number of fouls (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with three or more fouls in a season"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less than 3 blocks allseason"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the most twos by position"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have during a season"}
{"canonical": "team of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "natural": "which team did kobe bryant play for when he had 3 fouls in a season"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players allseason blocks are no more than kobe bryants allseason blocks"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals has kobe bryant had"}
{"canonical": "player that has less than two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name players with a single position"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant with 3 assists over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "natural": "what was the total number of blocks for kobe bryant in the 2004 season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "natural": "how many blocks with steal over 3 did kobe bryant play in one season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "natural": "during the season in which he had 3 turnovers name the number of games in which kobe bryant participated in"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players who have scored a total number of points in one season  larger than the total number of points scored in the same seaon by kobe bryant"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player who has scored the most points in a season"}
{"canonical": "season of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "natural": "how many seasons has kobe bryant played for the los angeles lakers"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "natural": "kobe bryant with three assists had how many rebounds"}
{"canonical": "position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))", "natural": "kobe bryant playing position"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "how many fouls does kobe bryant average when hes played at least 3 games in a season"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name of a player with no more rebounds each season than kobe bryant"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has a maximum of 3 fouls"}
{"canonical": "number of assists (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "natural": "for season 2004 note the number of total assists of kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "natural": "how many rebounds does kobe bryant make per season"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player scored 3 or less points during a season"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got the least turnovers so far this season"}
{"canonical": "player whose number of rebounds (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "note the players whose total number of rebounds in any one given season is more than 3"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "how many blocks does kobe bryant average in a season with 3 points"}
{"canonical": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have the points same as kob bryants highest points"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has fewer turnovers than kobe bryant in a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "how many rebounds does kobe bryant have each season as a laker"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who has had fewer steals this season than kobe bryant"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had the fewest fouls"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the other players in kobe bryants team"}
{"canonical": "position of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "natural": "what position is kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "natural": "how many points does kobe bryant get per season"}
{"canonical": "player that has the most number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has maximum number of teams"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "natural": "how many assists were made by kob bryant over a season in which he made 3 fouls"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "natural": "does kobe bryant have more fouls or rebounds per season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_rebounds)))", "natural": "kobe bryant had 3 rebounds"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "what is the number of the player in this position"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has more rebounds than kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_points)))", "natural": "in the season in which he had 3 turnovers find the number of  point for which kobe bryant was responsible"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who else plays the same position as kobe bryant"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the fewest blocks in a season"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who played the fewest games in a season"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least three points during the season"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find the player responsible for the biggest number of steals in any one season"}
{"canonical": "number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))", "natural": "how many blocks kob bryant made over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "natural": "during the season in which kobe bryant had 3 turnovers how many blocks was responsible for"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant make in an allseason total of 3 games"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player that scored three or more points per game last season"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with least number of blocks over a season"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less than 3 fouls"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got the fewest points in a year"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "natural": "number of played games over a season of player kobe bryant who has 3 steals over a season"}
{"canonical": "number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))", "natural": "how many points has kobe bryant scored this season"}
{"canonical": "player whose number of steals (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who made less than 4 steals"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "how many seasons has kobe bryant been starting point guard"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "during the season in which he scored 3 assists what position was kobe bryant playing"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "natural": "how many fouls does kobe bryant over all seasons"}
{"canonical": "player whose number of fouls (over a season) is at most number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played as any fouls as kobe bryant"}
{"canonical": "number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))", "natural": "how many assists did kobe have this season"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what position does kobe bryant play who had three fouls in the season"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with more than three played games"}
{"canonical": "player whose number of rebounds (over a season) is smaller than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has less rebounds than kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "natural": "during  season 2004 note the total number of points scored by kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when his all season steals equaled 3"}
{"canonical": "player whose number of turnovers (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had did not have 3 turnovers"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player played less than three games"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "how many games in a season did kobe bryant play where he had 3 fouls"}
{"canonical": "player whose number of points (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player scored more than 3 points"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals did kobe bryant have in 2004"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player as less than 3 assists"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less than 3 fouls"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have more than 3 turnovers over all seasons"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player does not have 3 assists"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had played more fouls than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have no more than three assists over a season"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has not played 3 fouls"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "natural": "how many steals does kobe bryant get in a season"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players score at least 3 points per season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "in how many games has kobe bryant made 3 blocks"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "fouls by kobe bryant over all seasons with 3 games played"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "which was the season kob bryant made 3 steals"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "a player that has played for no more than two teams"}
{"canonical": "number of played games (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "natural": "how many games did kobe bryant play as point guart during a season"}
{"canonical": "team of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "natural": "what team did kobe bryant have 3 fouls for"}
{"canonical": "player that has the smallest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the record for fewest steals in a season"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has most allseason points"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player equal or more assists than kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more than 3 turnovers"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "how many games did kobe bryant get 3 fouls in"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "natural": "how many assists does kobe bryant usually make in a season after hes made at least 3"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has made the least number of blocks"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players with assist scores over any given season that tally more than 3"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least 3 turnovers in a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "natural": "how many turnovers in the season did kobe bryant have for the lakers"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what position did kobe bryant play when he had 3 fouls"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "number of turnovers over a season of player kobe bryant who has assists over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he had 3 blocks"}
{"canonical": "number of points (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "natural": "how many points did kobe bryant make in 2004"}
{"canonical": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players played less games than kob bryant over a season"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players all season blocks were no less than 3"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has more or less than 3 all season rebounds"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players played in 2004 or 2010"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has played minimum 3 games over a season"}
{"canonical": "player that has the most number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has been apart of the most teams"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "natural": "find the number of points acquired by kobe bryant over the entire season in which his number of fouls was 3"}
{"canonical": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the same number of rebounds as kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "natural": "how many games kob bryant played in the season in which he made 3 assists"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "what teams did kobe bryant play on as point guard"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of fouls of kobebryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant who had three steals have"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "what season did kobe bryant have 3 steals"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_assists)))", "natural": "number of assists over a season of player kobe bryant with 3 rebounds over a season"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has less than 3 blocks over a season"}
{"canonical": "player that has the smallest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the least assists"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no less than 3 allseason steals"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points kob bryant made over a season in which he made 3 rebounds"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "in which season did kobe bryant play in point guard position"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more and less than 3 fouls over all seasons"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he made three assists"}
{"canonical": "player whose number of blocks (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string !=) (number 3 block))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that never made 3 blocks in a season"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the most assists over a season other than kobe bryant"}
{"canonical": "team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))", "natural": "what team does kobe bryant play on"}
{"canonical": "position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))", "natural": "koby bryant position"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many steals did kobe bryant get in 3 games"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers did kobe get after scoring 3 points"}
{"canonical": "player whose number of steals (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or less steals this season"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have the same number of points in a season as kobe bryants lowest amount"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the lowest amount of rebounds in a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant make in 2004"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players scored at least three points over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "in the same season in which kobe bryant had 3 rebounds what was the number of turnovers that he had"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has played largest numbergames over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have all season when he had 3 turnovers"}
{"canonical": "player that has less than two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has less then two positions"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players has the most points over all seasons"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player who has played at most 3 games over this season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant make over the season where he made 3 steals"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played the fewest games in a season"}
{"canonical": "player that has the largest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the highest number of assists"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals does kobe bryant have over all seasons"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that had three or fewer assists over the season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "natural": "number of assists over a season of player kobe bryant with 3 fouls over a season"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have no more than 3 fouls over all seasons"}
{"canonical": "season of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "natural": "how many seasons has kobe bryant broken 3 turnovers"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "how blocks did  did kobe bryant make after playing 3 fouls"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "for which team did kobe bryant make three rebounds"}
{"canonical": "player that has the smallest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the fewest assists per season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_blocks)))", "natural": "how many blocks does kobe bryant have in a season with at least 3 turnovers"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players with point totals in any one season equalling at least 3"}
{"canonical": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had equal or fewer assists than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players all season assists totaled at least as many as kobe bryants"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many games has kobe bryant played and hasnt scored a 3"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has less than 3 fouls total in a season"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with most points over a season"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player played more number of games over a season"}
{"canonical": "player whose number of played games (over a season) is at least number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who played at least as many games as kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "natural": "during the season kobe bryant committed 3 steals how many fouls did he have"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "natural": "how many assists can kobe bryant make in seasons with only 3 games played"}
{"canonical": "player that has less than two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have played for fewer than two teams"}
{"canonical": "player that has the largest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find the player with the highest score of assists performed in any one given season"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player who did not have three fouls in the season"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "team of player kobe bryant who has 3 rebounds over a season"}
{"canonical": "player whose number of steals (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more than three steals over a season"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "in which position did kobe bryant get 3 steals"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant make when his total blocks over a season was 3"}
{"canonical": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has played same number of games over a season as by player kobe bryantover a season"}
{"canonical": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many players have had more turnovers in a season than kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))", "natural": "how many fouls did kobe bryant have allseason"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "natural": "number of played games over a season of player kobe bryant with 3 turnovers over a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "how many fouls did kobe bryant make allseason playing 3 games"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "natural": "how many points did kobe bryant score during the season"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not more than 3 blocks over a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant after 3 turnovers"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that played in the most games during a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant who is at point guard"}
{"canonical": "player whose number of rebounds (over a season) is number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has a similar per season rebound average as kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "natural": "how many steals has kobe bryant had"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "natural": "how many points did kobe bryant score allseason when his steals equaled 3"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least three steals"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team did kobe bryant play 3 games for allseason"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "natural": "number of points over a season of player kobe bryant who has 3 fouls over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))", "natural": "how many did kobe bryant play so far this year"}
{"canonical": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played less games than kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_points)))", "natural": "how many points in a season did kobe bryant have when he had only three assists"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with most number of fouls over a season"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played the fewest games"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players did not play in 2004"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who did not have exactly three assists in any given season"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had at least as many fouls as kobe bryant in a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he had 3 blocks"}
{"canonical": "number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))", "natural": "how many blocks did kobe bryant have this season"}
{"canonical": "number of points (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_points)))", "natural": "how many total points did kobe bryant have in the 2004 season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "natural": "how many assists did kobe bryant have in the games where he had three fouls"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played less than 3 games"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "during the season in which kobe bryant had 3 turnovers how many assists were attributable to him"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "how many assists did kobe get after making 3 blocks"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what position is kobe bryant"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had more than three assists in a season"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or more turnovers"}
{"canonical": "player whose season is season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what seasons did kobe bryant play in"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has less than 3 assists over a season"}
{"canonical": "player whose number of rebounds (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more than 3 rebounds over a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls in a season did kobe bryant have"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not more turnovers over a season than player kobe bryant over a season"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with more than three turnovers in the season"}
{"canonical": "player that has the least number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played for the least number of teams"}
{"canonical": "player whose number of played games (over a season) is number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players who have a gamesparticipated in tally equalling that of kobe bryant in any one specific season"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "what team has kobe bryant played point guard for"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "natural": "how many blocks has kobe bryant had as an la laker"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have after 3 games"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players has less than 3 allseason fouls"}
{"canonical": "number of played games (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "natural": "while he was point guard find the number of games played by kobe bryant in the same season"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players had fewer than 3 turnovers in a season"}
{"canonical": "player whose number of blocks (over a season) is number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has as many blocks as kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls did kobe have in the season he played point gaurd"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of rebounds over a season are not more than rebounds over a season of player kobe bryant"}
{"canonical": "player whose number of played games (over a season) is smaller than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has been in fewer games than kobe bryant"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have the least amount of fouls in a season"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of assists over a season is more than that of  of player kobe bryant over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_turnovers)))", "natural": "mention the number of turnovers of player kobe bryant in 3 games played over this season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant who has 3 steals over a season"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "what team did kobe bryant play when he made 3 rebounds over the season"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players whose total number of points in a season is not 3"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more blocks all season than kobe bryant"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "natural": "how many assists does kobe bryant manage in seasons limited to 3 fouls"}
{"canonical": "player whose number of turnovers (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has a maximum of 3 allseason turnovers"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less turnovers than kob bryant over a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "natural": "number of assists over a season of player kobe bryant from season 2004"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had 3 or more assists"}
{"canonical": "player whose number of rebounds (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with a total number of rebounds in a season greater than three"}
{"canonical": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player got lesser number of assists than kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant get after the 3 rebounds"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos a player with less points per season than kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had more 3 or more turnovers in a game"}
{"canonical": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players played most games over a season same as kob bryant"}
{"canonical": "player that has the most number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string team))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have been on the most teams"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "is there a player with the same number of turnovers in a specific season as kobe bryant has in a specific season as well"}
{"canonical": "player that has less than two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players are associated with one or no team"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have the same number of turnovers over all their seasons equal to or worse than that of kobe bryant"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had the least rebounds this season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "natural": "how many rebounds  kob bryant made in the season he made 3 turnovers"}
{"canonical": "player whose number of blocks (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string !=) (number 3 block))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has more or less than 3 blocks"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player is on either the los angeles lakers or the cleveland cavaliers"}
{"canonical": "season of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "natural": "which season did kobe bryant have only 3 rebounds in"}
{"canonical": "team of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "natural": "los angeles lakers roster"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had no more rebounds than kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_games_played)))", "natural": "how many games has kobe bryant played"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "in which season did kobe bryant play 3 fouls"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "how many points does kobe bryant average over a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "natural": "during kobe bryants time with the lakers how many assists has he averaged per season"}
{"canonical": "player whose number of blocks (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_blocks) (string !=) (number 3 block))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players with blocks to their credit that tally less than 3 or more than 3"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with fewer than three points"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who plays on the same team as kobe bryant"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that play the same position as kobe bryant"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players responsible for the same amount of assists in any one specific season as kobe bryant"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "what team did kobe bryant play for when he had three blocks during a single season"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "whats the position of kobe bryant"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had less than or equal to 3 points"}
{"canonical": "player that has the largest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with the most played games over all seasons"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "what position does kobe bryant who has three steals play"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals has kobe bryant had"}
{"canonical": "number of assists (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "natural": "how many assists did kobe bryant have as point guard"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "position of player kobe bryant who has 3 points over a season"}
{"canonical": "player whose number of rebounds (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with at least 3 rebounds over a season"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the most turnovers"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "natural": "how many turnovers were got by kobe bryant who belonged to the los angeles lakers team"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "natural": "in how many seasons has kobe bryant given up exactly 3 turnovers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant from los angeles lakers team"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same or more assists than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more assists than kobe bryant this season"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with more than three assists during the season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many games will kobe bryant play this coming season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have over a season"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of points over a season is not less  than that of player kobe bryantover a season"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name someone with more games per season played than kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points did la laker kobe bryant score"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "natural": "whats  kobe bryants average steals per season"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same or more number of blocks as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have at least 3 blocks a season"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same number of turnovers as kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))", "natural": "what was the total number of games played by kobe bryant in a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have this season"}
{"canonical": "player whose number of played games (over a season) is at most number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played in the same or less games as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player having not less than 3 blocks over a season"}
{"canonical": "player whose number of points (over a season) is at least number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has at least as many points in a season as kobe bryant"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what position was kobe bryant playing when he has 3 rebounds over a full season"}
{"canonical": "player whose number of fouls (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had over 3 fouls"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with no more than three fouls"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player gets more assists every season than kobe bryant"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player scored less than 3 points in a full season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists did kobe bryant make in a season of 3 turnovers"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "in what year did kobe bryant have three fouls"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players who have participated in more than 3 games in a season"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players who have committed a higher amount of fouls in a given season than kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "natural": "how many points did kobe bryant who had three fouls have"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have in a game where he had three fouls"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_fouls)))", "natural": "how many fouls were committed by kob bryant over a season in which he made 3 steals"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "what team does kobe bryant play for"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had less than 3 points"}
{"canonical": "season of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "natural": "how many seasons has kobe bryant played"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "how many points did kobe bryant score as the point guard"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more played games in a season than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has at least as many assists as kobe bryant over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "number of turnovers of kobe bryant who has 3 rebounds"}
{"canonical": "player whose number of turnovers (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with less than 3 turnovers over a season"}
{"canonical": "position of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "natural": "position of player kobe bryant from los angeles lakers team"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many 3point games did kobe bryant play allseason"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "position of player kobe bryant with 3 steals over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "natural": "how many blocks did kobe have in 2004"}
{"canonical": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player matches the season average steal rate of kobe bryant"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the most blocks this season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many games did kobe bryant get 3 points in"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_games_played)))", "natural": "how many games has kobe bryant played"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have the same position as kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "natural": "how many fouls does kobe bryant take in an average season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "natural": "number of steals of point guard kobe bryant"}
{"canonical": "number of player", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.player) (string !type))))", "natural": "how many players are there total"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have been on two or less teams"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "natural": "during the season in which he had 3 steals how many rebounds was kobe bryant responsible for"}
{"canonical": "number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))", "natural": "how many fouls did kobe bryant have during the season"}
{"canonical": "team of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "natural": "what team does kobe bryant play for"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made blocks same as maximum blocks by kobe bryant over a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "number of rebounds over a season of player kobe bryant who has played 3 games over a season"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "what team did kobe bryant play for in 2004"}
