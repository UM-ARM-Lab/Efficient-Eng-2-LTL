{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player having not less than 3 blocks over a season"}
{"canonical": "player whose position is not point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string !=) en.position.point_guard)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player did not play point guard"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the same number of turnovers as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no more than three allseason blocks"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player plays either point guard or forward"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players whose number of points is less than 3 over a season"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more and less than 3 fouls over all seasons"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "whats kobe bryants season turnover average"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_points)))", "natural": "how many points did kobe bryant who had three fouls have"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had same or more rebounds than kobe bryant over all seasons"}
{"canonical": "player whose number of steals (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players who made more than 3 steals in a given season"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had no more rebounds over a season than that of kobe bryant"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with the most blocks during the season"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what is the position of player kobe bryant with 3 rebounds over this season"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have had fewer turnovers per season than kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more blocks than kobe bryant this season"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "what season did kobe bryant have 3 steals"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who have played fewer than 3 games in a season"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the fewest blocks in a season"}
{"canonical": "team of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string team)))", "natural": "which team did kobe bryant play for when he had 3 fouls in a season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_assists)))", "natural": "how many assists were made by kob bryant over a season in which he made 3 fouls"}
{"canonical": "player whose number of assists (over a season) is smaller than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player got lesser number of assists than kobe bryant"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "team of player kobe bryant who is at point guard"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more points than kobe bryant"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less points than kob bryant over a season"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "name kobe bryants position when he had three turnovers"}
{"canonical": "season of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string season)))", "natural": "what year did kobe bryant have three rebounds"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "how many positions"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less than 4 fouls"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name players with turnover amounts in any one season that are less than the turnover amounts attributable to kobe bryant in any one season"}
{"canonical": "position of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string position)))", "natural": "what position did kobe bryant play on the lakers"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "what position did kobe bryant play when his allseason turnovers equaled 3"}
{"canonical": "team of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string team)))", "natural": "what team did kobe bryant play for when he had three blocks during a single season"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who played 2004 to 2010"}
{"canonical": "player that has the largest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the most fouls"}
{"canonical": "player that has the smallest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the record for fewest steals in a season"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more points than kob bryant over a season"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with greater than three blocks in a season"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had played more fouls than kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "what is the number of turnovers by kobe bryant who made 3 points over the season"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the most blocks this season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "natural": "number of assists over a season of player kobe bryant from season 2004"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had 3 or more assists over all seasons"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who plays on the same team as kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_rebounds)))", "natural": "how many rebounds did kobe get after he made 3 blocks"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player played in 2004 or 2010"}
{"canonical": "player whose number of turnovers (over a season) is larger than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with more turnovers per season than kobe bryant"}
{"canonical": "number of points (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_points)))", "natural": "how many points did kobe bryant have on the los angeles lakers"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points did kobe bryant score in three played games"}
{"canonical": "number of steals (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_steals)))", "natural": "how many steals did kobe bryant have in 2004"}
{"canonical": "season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))", "natural": "what seasons did kobe bryant play"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant who has 3 fouls over a season"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who leads the points race so far this season"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the minimum number of blocks of kobebryant"}
{"canonical": "team of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string team)))", "natural": "los angeles lakers roster"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many steals did kobe bryant make over the season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_blocks)))", "natural": "how many games did kobe bryant play where he made three blocks"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists did kobe bryant get after 3 turnovers"}
{"canonical": "season of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string season)))", "natural": "how long has kobe bryant played with more than 3 assists per season"}
{"canonical": "player whose number of points (over a season) is at most number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that scored the same or fewer points than kobe during the season"}
{"canonical": "number of team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.team) (string !type))))", "natural": "number of teams"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose steals over a season are not more than steals player kobe bryant over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_blocks)))", "natural": "during his season as point guard how many blocks did kobe bryant perform"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have after 3 games"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played more games than kobe bryant this season"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what position was kobe bryant in when he made 3 fouls in a season"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has less than 3 blocks over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "how many games was kobe bryant in during the season that he played with the los angeles lakers"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "whats the number of assists kobe bryant gets in a season when hes got 3 or more blocks"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_points)))", "natural": "name the season in which kobe bryants total point score was 3"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that had the least amount of rebounds in a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "how many steals kob bryant made in the season in which he played in los angeles lakers team"}
{"canonical": "number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))", "natural": "how many fouls did kobe have last season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_assists)))", "natural": "how many assists did kobe bryant of the lakers have"}
{"canonical": "season of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "natural": "how many seasons has kobe bryant played for the lakers"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had no more turnovers in a season than kobe bryant"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_games_played)))", "natural": "during the season in which kobe bryant managed 3 assists how many games did he play in"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had the same number of fouls in a season that kobe bryant had"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant make over the season where he made 3 steals"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "in which season did kobe bryant commit 3 fouls"}
{"canonical": "season of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string season)))", "natural": "in which season did kobe bryant have 3 turnovers"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant give up as point guard"}
{"canonical": "position of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string position)))", "natural": "what position did kobe bryant have 3 turnovers as"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many games did kobe bryant get 3 points in"}
{"canonical": "team of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string team)))", "natural": "team of player kobe bryant who has 3 rebounds over a season"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player plays point guard or forward"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "what position did kobe bryant play when his all season points equaled 3"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played fewer than 3 games so far this season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls did kobe have in the season he played point gaurd"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he had 3 points"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals has kobe bryant had"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have less fouls than kobe bryant over all seasons"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more assists than kobe bryant"}
{"canonical": "player whose number of steals (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string !=) (number 3 steal))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more or less than 3 steals"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with no more than three fouls"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the least number of points in this season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points had kobe bryant scored after 3 rebounds"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players committed more fouls that kobe bryant over a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have after 3 games"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_rebounds)))", "natural": "how many rebounds does kobe bryant make by the time hes got 3 points in a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant from los angeles lakers team"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "what seasons did kobe bryant have only three blocks"}
{"canonical": "player whose number of played games (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_games_played) (string !=) (number 3 game))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find those players who have participated in less or more than 3 games in a given season"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who did not have three assists"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he had three blocks"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many blocks kob bryant made in the season in which he played 3 games"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "the player with least blocks over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "how many games did kobe bryant play with three blocks"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers did kobe get after scoring 3 points"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "points of kob bryant over a season in which he played in point guard"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "kobe bryant ended up with how many assists last season"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player that plays in two positions"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has more than 3 allseason blocks"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the least points this season"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has maximum two team"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of fouls over a season is less than that of player kobe bryant over a season"}
{"canonical": "season of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string season)))", "natural": "in what season did kobe only give up 3 fouls"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less turnovers than kobe bryant"}
{"canonical": "player whose number of fouls (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had more than three fouls in the season"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had the same number of turnovers as kobe bryant"}
{"canonical": "position of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string position)))", "natural": "in the season he had 3 blocks kobe bryant was playing for what team"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_turnovers)))", "natural": "how many turnovers did kobe when playing with three fouls over the season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant get after the 3 rebounds"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant who is at point guard"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_blocks)))", "natural": "how blocks did  did kobe bryant make after playing 3 fouls"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had equal or more fouls as kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how any steals did kobe bryant get"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more blocks than kobe bryant over a season"}
{"canonical": "player that has the smallest number of assists (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the fewest assists"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with at least three played games"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least three points during the season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_games_played)))", "natural": "in which season did kobe bryant participate in 3 games"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players whose total number of rebounds in a given season is more than the number of rebounds made in a season by kobe bryant"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with at least as many steals as kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he had 3 rebounds"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "for which team kob bryant made 3 assists over a season"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "what season did kobe bryant play point guard"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "natural": "how many blocks did kobe bryant make after getting 3 steals"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_blocks)))", "natural": "how many blocks did kobe have in 2004"}
{"canonical": "player whose season is season of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played in the same season as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is smaller than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has fewer blocks per season than kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "during the year he played for the los angeles lakers how many fouls did kobe bryant have"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played more than 3 games in a season"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player made more than 3 blocks over the season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points has kobe bryant made in a season when he made 3 plus rebounds"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player did not score 3 rebounds"}
{"canonical": "player whose number of blocks (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has gotten 3 or less blocks"}
{"canonical": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has as much steals as kob bryant made over a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "kobe bryants rebounds for the season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "natural": "when did kobe bryant have 3 all season assists"}
{"canonical": "number of assists (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_assists)))", "natural": "during his season playing point guard how many assists was bryant kobe responsible for"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has at most 3 assists total in a season"}
{"canonical": "season of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string season)))", "natural": "which year did kobe bryant play point guard"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "how many allseason blocks did kobe bryant have in 3 allseason games"}
{"canonical": "player whose team is not los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string !=) en.team.lakers)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name players who are not in los angeles lakers"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_assists)))", "natural": "how many assists does kobe bryant usually make in a season after hes made at least 3"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have during the season"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team is kobe bryant on"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what was the position of kobe bryant"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "over a season which player has the largest number of rebounds"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player from los angeles lakers or cleveland cavaliers"}
{"canonical": "number of played games (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_games_played)))", "natural": "how many games did kobe bryant play in the 2004 season"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have made at least as many blocks as kobe bryant"}
{"canonical": "player that has the smallest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the fewest rebounds in one season"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no less than 3 allseason steals"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "natural": "number of seasons where kobe bryant had three fouls"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player doesnt average over 3 assists per game"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with more played games in a season than kobe bryant"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team did kobe bryant play for"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name those players with scored assists in any one season tallying at least 3"}
{"canonical": "number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.position) (string !type))))", "natural": "what is the number of the player in this position"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who had at least as many assists as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is at least number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had the same or more blocks than kobe bryant"}
{"canonical": "number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))", "natural": "what is the number of assists by player kobe bryant over the season"}
{"canonical": "player whose number of assists (over a season) is at most number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same amount of steals in a season or less than kobe bryant"}
{"canonical": "player that has the largest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with most points scored over all seasons"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "number of points over a season of player kobe bryant who is at point guard"}
{"canonical": "player whose number of played games (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players who have participated in more than 3 games in a season"}
{"canonical": "player whose number of points (over a season) is smaller than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players scored less points over the season than kobe bryant"}
{"canonical": "player that has at most two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "a player that has played for no more than two teams"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of assists over a season is same as that of player kobe bryant over a season"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "during the season in which kobe bryants total number of assists was 3 what team was he on"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player scored fewer than 3 points in a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant make in 2004"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have the least amount of fouls in a season"}
{"canonical": "player whose number of fouls (over a season) is smaller than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had less fouls than kobe bryant"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had 3 or more steals this season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_games_played)))", "natural": "how many season games did kobe bryant play as an la laker"}
{"canonical": "player whose number of fouls (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with not less than 3 fouls over a season is at least 3"}
{"canonical": "player that has at most two position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string position) (string <=) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with two positions"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant with 3 fouls over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant who has played 3 games over a season"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more than 3 turnovers"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made more than 3 block over a season"}
{"canonical": "team of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "natural": "team of player kobe bryant with 3 points over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many games will kobe bryant play this coming season"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find the player responsible for the biggest number of steals in any one season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he made three turnovers"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players are point guards or forwards"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "natural": "how many allseason blocks did kobe bryant have as an la laker"}
{"canonical": "player whose number of blocks (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made 3 blocks over a season"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "are there players whose total number of assists in any one given season equals at most 3"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_steals)))", "natural": "number of steals over a season of player kobe bryant with 3 turnovers over a season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant with 3 blocks over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_steals)))", "natural": "how many steals did kobe bryant make during a season while playing for the los angeles lakers"}
{"canonical": "position of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string position)))", "natural": "what position did kobe bryant play"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points has kobe bryant gotten in a season"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more rebounds per season than kobe bryant"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_fouls)))", "natural": "how many fouls in a season did kobe bryant have"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player played less than three games"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "what team has kobe bryant played point guard for"}
{"canonical": "player whose number of steals (over a season) is number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_steals) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who had the same number of steals as kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_steals)))", "natural": "how many steals kob bryant made in the season he made 3 assists"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "number of rebounds over a season of player kobe bryant who has played 3 games over a season"}
{"canonical": "player whose number of assists (over a season) is number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same amount of assists as kobe bryant"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has most rebounds over a season"}
{"canonical": "team of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string team)))", "natural": "what team does kobe bryant play for"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "team of player kobe bryant who has 3 assists over a season"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who had more points than kobe bryant"}
{"canonical": "player whose number of points (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "note those players who accrued a total of points in any one season totalling more than 3"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many steals did kobe bryant have in three played games"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "player that has the largest number of steals (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has the maximum number of steals"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_steals)))", "natural": "how many steals does kobe get in seasons where hes got more than 3 steals"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant after having 3 rebounds"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what position kob bryant played in the season he made 3 rebounds"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant have in seasons with over 3 steals"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists did kobe bryant have when he made three turnovers"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_fouls)))", "natural": "how many all season fouls did kobe bryant have as an la laker"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have over the season for the la lakers"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had more steals than kobe bryant over all seasons"}
{"canonical": "team of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string team)))", "natural": "how many turnovers does kobe bryant average over a reason"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_turnovers)))", "natural": "how many turnovers  did kobe bryant get after he made 3 blocks"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose number of fouls over a season is same as that of player kobe bryant over a season"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has played the greatest number of positions"}
{"canonical": "player that has less than two team", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countComparative (var s) (string team) (string <) (number 2))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has one team"}
{"canonical": "player whose position is point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players are point guard or forward"}
{"canonical": "player whose number of fouls (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has a total foul count under 3 for the season"}
{"canonical": "player whose number of rebounds (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_rebounds) (string !=) (number 3 rebound))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has more or less than 3 all season rebounds"}
{"canonical": "player whose number of played games (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had at most 3 games allseason"}
{"canonical": "kobe bryant or lebron james", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.player.kobe_bryant en.player.lebron_james))", "natural": "who is better kobe bryant or lebron james"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the most blocks in a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_games_played)))", "natural": "how many games kob bryant played in point guard position over a season"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has 3 or more steals in a season"}
{"canonical": "player whose number of assists (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "find players with assist scores over any given season that tally more than 3"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_rebounds)))", "natural": "how many rebounds does kobe bryant have a season with 3 turnovers"}
{"canonical": "player whose number of turnovers (over a season) is number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player gives up te same number of turnovers as kobe bryant each season"}
{"canonical": "player whose number of rebounds (over a season) is at least number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had the same or more rebounds as kobe bryant"}
{"canonical": "player whose number of blocks (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had more than 3 blocks"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has more than 3 turnovers in each season theyve played"}
{"canonical": "number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played)))", "natural": "how many games has kobe bryant played each season"}
{"canonical": "player that has the least number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string min) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has played the least number of positions"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_blocks)))", "natural": "how many blocks were made by kobe bryant who belonged to the los angeles lakers team"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made less turnovers than kob bryant over a season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "during the season in which his point tally was 3 how many games was kobe bryant in"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "how many blocks did kobe bryant have when he had 3 points"}
{"canonical": "team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))", "natural": "team of player kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no less than 3 all season assists"}
{"canonical": "player whose number of rebounds (over a season) is larger than number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more rebounds than kob bryant over a season"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have gotten time in at least 3 games"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_assists)))", "natural": "during the season in which kobe bryant had game time in 3 games how many assists was he responsible for"}
{"canonical": "player whose number of steals (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least three steals"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_fouls)))", "natural": "how many fouls does kobe bryant over all seasons"}
{"canonical": "number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds)))", "natural": "how many all season rebounds did kobe bryant have"}
{"canonical": "position of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string position)))", "natural": "during the season in which he played in 3 games total what position was kobe bryant playing"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "how many points did kobe bryant score as point guard"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_points)))", "natural": "how many points did kobe bryant score in the season that he had three steals"}
{"canonical": "player whose number of rebounds (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 rebound)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player makes less than 3 rebounds per career average season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_rebounds)))", "natural": "how many rebounds has kobe bryant had"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players scored more or less than 3 points in a season"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player equal or more assists than kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have more than 3 turnovers over all seasons"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_games_played)))", "natural": "how many games did kobe bryant have three turnovers over the season"}
{"canonical": "player whose number of fouls (over a season) is at least number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player takes more fouls than kobe bryant or the same per season"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_fouls)))", "natural": "how many fouls did kobe bryant have when he had 3 points"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "during which seasons did kobe bryant make 3 blocks"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_fouls)))", "natural": "how many fouls were played by kobe bryant in 2004"}
{"canonical": "player that has the smallest number of fouls (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player with smallest number of fouls over a season"}
{"canonical": "player whose team is team of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player from player kobe bryants team"}
{"canonical": "player that has the smallest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has the lowest average blocks per season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_games_played)))", "natural": "in how many games did kobe bryant make 3 fouls"}
{"canonical": "team of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string team)))", "natural": "which team did kobe bryant play for with three assists"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has played minimum 3 games over a season"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_steals)))", "natural": "player kobe bryant has given 3 fouls over this season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many points did kobe bryant score when he had three rebounds"}
{"canonical": "player that has the smallest number of played games (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has played the least amount of games"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players have the same position as kobe bryant"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player did not play in 2004 or 2010"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team was kobe bryant on when he played less than three games in a season"}
{"canonical": "team of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string team)))", "natural": "in which team did kobe bryant play in season 2004"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "number of fouls kobe bryant  who has 3 assists"}
{"canonical": "number of assists (over a season) of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string num_assists)))", "natural": "how many assists kob bryant made in season 2004"}
{"canonical": "team of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string team)))", "natural": "what team did kobe bryant play 3 games for allseason"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name the player with lesser steals than player kobe bryant over a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_points)))", "natural": "how many points did kobe bryant score over the season in which he played 3 games"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players allseason blocks are no more than kobe bryants allseason blocks"}
{"canonical": "player whose number of points (over a season) is larger than number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has had more points in a season than kobe bryant"}
{"canonical": "number of player", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call .size (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.singleton en.player) (string !type))))", "natural": "what is the number of the player kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least three assists last season"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_games_played)))", "natural": "how many games did kobe bryant play during a season"}
{"canonical": "position of player kobe bryant whose season is 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string season) (string =) (date 2004 -1 -1)) (string position)))", "natural": "which position did kobe bryant play in 2004"}
{"canonical": "position of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string position)))", "natural": "in what position was kobe able to get 3 assists"}
{"canonical": "player whose number of points (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players made more than 2 points over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_blocks)))", "natural": "how many blocks with steal over 3 did kobe bryant play in one season"}
{"canonical": "player whose number of assists (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who has less than 3 assists over a season"}
{"canonical": "player whose season is not 2004", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string !=) (date 2004 -1 -1))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that did not play in 2004"}
{"canonical": "player whose number of steals (over a season) is smaller than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who has had fewer steals this season than kobe bryant"}
{"canonical": "player whose season is 2004 or 2010", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string season) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat (date 2004 -1 -1) (date 2010 -1 -1)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players played in 2004 or 2010"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "number of turnovers over a season of player kobe bryant"}
{"canonical": "player whose number of played games (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played less than 3 games"}
{"canonical": "player that has the largest number of blocks (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has the most blocks in a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_rebounds)))", "natural": "how many rebounds and assists does kobe bryant have over a season"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_blocks)))", "natural": "what player had more blocks than kobe bryant whose number of assists is 3"}
{"canonical": "player whose number of blocks (over a season) is at most number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have had less than or equal the number of rebounds as kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is smaller than number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whats the name of a player with less turnovers per season than kobe bryant"}
{"canonical": "player whose number of points (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_points) (string !=) (number 3 point))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who had a point score that was not three"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had more fouls than kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals)))", "natural": "how many steals kob bryant made over a season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many turnovers has kobe bryant had"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string num_rebounds)))", "natural": "how many rebounds kob bryant made over a season in which he made 3 fouls"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "how many rebounds does kobe bryant have each season as a laker"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players did not score more than three points in a season"}
{"canonical": "team of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string team)))", "natural": "what team did kobe bryant score 3 points for"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers did kobe bryant have when he made three assists"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_assists)))", "natural": "how many assists did kobe bryant make in the season in which he scored three points"}
{"canonical": "player that has the largest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "whos got the lead for most turnovers in a season"}
{"canonical": "number of points (over a season) of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string num_points)))", "natural": "how many allseason points did kobe bryant score when rebounds equaled 3"}
{"canonical": "player whose number of steals (over a season) is at least number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has no fewer allseason steals than kobe bryant"}
{"canonical": "player whose number of steals (over a season) is at most number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has fewer steals per season on average than kobe bryant"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_turnovers)))", "natural": "the number of turnovers of player kobe bryant over this season is 3"}
{"canonical": "player whose number of points (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with no more than three points per season"}
{"canonical": "player whose number of fouls (over a season) is larger than number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more fouls than kobe bryant"}
{"canonical": "player whose number of assists (over a season) is at least number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players had equal or more assists than kobe bryant over all seasons"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_turnovers)))", "natural": "how many turnovers does kobe bryant have over all seasons"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string num_assists)))", "natural": "how many assists did kobe bryant have when he had 3 blocks"}
{"canonical": "player whose number of blocks (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 block)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players with less than 3 blocks over all seasons"}
{"canonical": "position of player kobe bryant whose number of fouls (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls) (string =) (number 3 foul)) (string position)))", "natural": "what position does kobe bryant play"}
{"canonical": "point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))", "natural": "players who are forwards or point guards"}
{"canonical": "player whose number of fouls (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string !=) (number 3 foul))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what players have a total number of fouls over a season that is not 3"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player who plays the same position as kobe bryant"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string num_rebounds)))", "natural": "during his los angeles lakers season how many rebounds did kobe bryant have"}
{"canonical": "player whose number of turnovers (over a season) is at most number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player has fewer turnovers than kobe bryant in a season"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many rebounds did kobe bryant have after 3 games"}
{"canonical": "player whose number of turnovers (over a season) is at least number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had the same or more turnovers than kobe bryant"}
{"canonical": "season of player kobe bryant whose number of blocks (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks) (string =) (number 3 block)) (string season)))", "natural": "in which season did kobe bryant average 3 blocks"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_steals)))", "natural": "how many steals has kobe bryant had"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "how many fouls will kobe bryant have in seasons when hes got 3 assists"}
{"canonical": "number of blocks (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_blocks)))", "natural": "number of blocks over a season of player kobe bryant who has 3 points over a season"}
{"canonical": "player whose number of turnovers (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_turnovers) (string !=) (number 3 turnover))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player who did not have three turnovers"}
{"canonical": "player whose team is not los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string !=) en.team.lakers)) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which players dont play for the la lakers"}
{"canonical": "player whose number of played games (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 game)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player played 3 or more games"}
{"canonical": "player whose number of assists (over a season) is larger than number of assists (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who had a greater number of assists in a season than kobe bryant"}
{"canonical": "player whose number of turnovers (over a season) is at least 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had at least 3 turnovers in a season"}
{"canonical": "player whose team is los angeles lakers or cleveland cavaliers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string team) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.team.lakers en.team.cavaliers))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player is on either the los angeles lakers or the cleveland cavaliers"}
{"canonical": "position of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string position)))", "natural": "what position did kobe bryant get 3 steals as"}
{"canonical": "player whose number of assists (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_assists)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 assist)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "player whose assists over a season is at most 3"}
{"canonical": "player whose number of points (over a season) is smaller than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)) (string <) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 point)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has scored less than three points"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_rebounds)))", "natural": "how many seasons has kobe played more than 3 games and whats his career rebound total"}
{"canonical": "season of player kobe bryant whose team is los angeles lakers", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string team) (string =) en.team.lakers) (string season)))", "natural": "which year did kobe bryant play for the la lakers"}
{"canonical": "player whose position is position of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string position) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what other players play the same position as kobe bryant"}
{"canonical": "player whose number of steals (over a season) is larger than number of steals (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player had more steals than kobe bryant this season"}
{"canonical": "player whose number of fouls (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_fouls)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 foul)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player has a maximum of 3 fouls"}
{"canonical": "player that has the smallest number of points (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_points)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player made least points"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "which season did kobe bryant average over 3 steals a game"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_fouls)))", "natural": "number of fouls over a season of player kobe bryant who has played 3 games over a season"}
{"canonical": "season of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string season)))", "natural": "in which season did kobe bryant have three steals"}
{"canonical": "season of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string season)))", "natural": "this is the season of player kobe bryant who has played 3 games"}
{"canonical": "number of rebounds (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_rebounds)))", "natural": "how many all season rebounds did kobe bryant have as point guard"}
{"canonical": "player whose number of blocks (over a season) is larger than number of blocks (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_blocks)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_blocks))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has more blocks per season than kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_steals)))", "natural": "how many steals did point guard kobe bryant have over the season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_turnovers)))", "natural": "how many threepoint turnovers did kobe bryant have"}
{"canonical": "number of points (over a season) of player kobe bryant whose position is point guard", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string position) (string =) en.position.point_guard) (string num_points)))", "natural": "how many points did kobe bryant score in the position of point guard"}
{"canonical": "number of played games (over a season) of player kobe bryant whose number of points (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points) (string =) (number 3 point)) (string num_games_played)))", "natural": "how many games kob bryant played over a season in which he made 3 points"}
{"canonical": "number of fouls (over a season) of player kobe bryant whose number of assists (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_assists) (string =) (number 3 assist)) (string num_fouls)))", "natural": "how many fouls did kobe bryant get called for the season he had 3 assists"}
{"canonical": "point guard or forward", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.concat en.position.point_guard en.position.forward))", "natural": "name a point guard or a forward"}
{"canonical": "player that has the most number of position", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.countSuperlative (var s) (string max) (string position))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player is the most versatile and plays the most number of positions"}
{"canonical": "player whose number of fouls (over a season) is number of fouls (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_fouls) (string =) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_fouls)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "which player had the same number of fouls as kobe bryant"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of turnovers (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers) (string =) (number 3 turnover)) (string num_assists)))", "natural": "how many assists did player kobe bryant have over this season to get 3 turnovers"}
{"canonical": "player whose number of played games (over a season) is larger than number of played games (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_games_played)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that player more games in a season than that of kobe bryant"}
{"canonical": "player whose number of steals (over a season) is at most 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_steals)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 steal)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players who made less than 4 steals"}
{"canonical": "player whose number of turnovers (over a season) is larger than 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)) (string >) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (number 3 turnover)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "players that have more than 3 turnovers over all seasons"}
{"canonical": "player whose number of rebounds (over a season) is at most number of rebounds (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)) (string <=) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericEntity (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds))))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "who has had more or equal number of rebounds than kobe bryant"}
{"canonical": "number of steals (over a season) of player kobe bryant whose number of played games (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_games_played) (string =) (number 3 game)) (string num_steals)))", "natural": "how many all season steals did kobe bryant have in 3 games"}
{"canonical": "player that has the largest number of rebounds (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string max) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_rebounds)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "note the player with the highest number of rebounds to their credit in any one season"}
{"canonical": "number of assists (over a season) of player kobe bryant whose number of steals (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_steals) (string =) (number 3 steal)) (string num_assists)))", "natural": "how many assists has kobe bryant had"}
{"canonical": "player whose number of assists (over a season) is not 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (var s) (string num_assists) (string !=) (number 3 assist))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "what player didnt have 3 assists"}
{"canonical": "position of player kobe bryant whose number of rebounds (over a season) is 3", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.filter (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_rebounds) (string =) (number 3 rebound)) (string position)))", "natural": "what position did kobe bryant play when he got 3 rebounds"}
{"canonical": "number of points (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_points)))", "natural": "how many points has kobe bryant scored this season"}
{"canonical": "number of turnovers (over a season) of player kobe bryant", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty en.player.kobe_bryant (call edu.stanford.nlp.sempre.overnight.SimpleWorld.reverse (string player))) (string num_turnovers)))", "natural": "how many turn overs kob bryant made over a season"}
{"canonical": "player that has the smallest number of turnovers (over a season)", "formula": "(call edu.stanford.nlp.sempre.overnight.SimpleWorld.listValue (call edu.stanford.nlp.sempre.overnight.SimpleWorld.getProperty ((lambda s (call edu.stanford.nlp.sempre.overnight.SimpleWorld.superlative (var s) (string min) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.ensureNumericProperty (string num_turnovers)))) (call edu.stanford.nlp.sempre.overnight.SimpleWorld.domain (string player))) (string player)))", "natural": "name a player with the fewest turnovers during a season"}
